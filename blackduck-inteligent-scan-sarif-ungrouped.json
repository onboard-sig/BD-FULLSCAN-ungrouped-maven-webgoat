{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","runs":[{"tool":{"driver":{"name":"Black Duck Intelligent","version":"9.1.0","organization":"Synopsys","rules":[{"id":"CVE-2023-34055 spring-boot 3.1.0: spring-boot-properties-migrator 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot 3.1.0 from spring-boot-properties-migrator 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-properties-migrator 3.1.0  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=b6f54cd2-fc3a-44ee-8f90-6f5c5654b2da)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-properties-migrator:3.1.0\n        - org.springframework.boot:spring-boot:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-3341 logback-classic 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-classic 1.4.7 from spring-boot-starter-validation 3.1.0 (BDSA-2023-3341)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-classic 1.4.7  | 1.4.14  | 1.4.14 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=83f309c3-35f3-4960-9f46-1e134f884cde)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3341](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3341) - Logback Vulnerable to Denial-of-Service (DoS) via Sending Malicious Data to Receiver\n\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.springframework.boot:spring-boot-starter-logging:3.1.0\n                - ch.qos.logback:logback-classic:1.4.7\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-6378 logback-classic 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-classic 1.4.7 from spring-boot-starter-validation 3.1.0 (CVE-2023-6378 BDSA-2023-3307)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-classic 1.4.7  | 1.4.14  | 1.4.14 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=83f309c3-35f3-4960-9f46-1e134f884cde)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3307](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3307)([CVE-2023-6378](https://nvd.nist.gov/vuln/detail/CVE-2023-6378)) - Logback Vulnerable to Denial-of-Service (DoS) via Sending Malicious Data to Receiver\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.springframework.boot:spring-boot-starter-logging:3.1.0\n                - ch.qos.logback:logback-classic:1.4.7\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 http2-hpack 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","shortDescription":{"text":"Transitive Dependency: http2-hpack 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| http2-hpack 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=61a20327-af04-4374-b2a9-eb30d1bcefbd)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty.http2:http2-server:11.0.15\n            - org.eclipse.jetty.http2:http2-common:11.0.15\n                - org.eclipse.jetty.http2:http2-hpack:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-test 6.0.9: spring-boot-starter-test 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-test 6.0.9 from spring-boot-starter-test 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-test 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=3bd55139-67a7-4e3a-83f8-4130eebaa7cc)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-test:3.1.0\n        - org.springframework:spring-test:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=7b8f4731-4355-4e70-86fc-7176aed9a742)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n            - org.eclipse.jetty:jetty-xml:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=7b8f4731-4355-4e70-86fc-7176aed9a742)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n            - org.eclipse.jetty:jetty-xml:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=7b8f4731-4355-4e70-86fc-7176aed9a742)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n            - org.eclipse.jetty:jetty-xml:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-xml 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-xml 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=7b8f4731-4355-4e70-86fc-7176aed9a742)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n            - org.eclipse.jetty:jetty-xml:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34053 spring-jdbc 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-jdbc 6.0.9 from spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-jdbc 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=3b66aecc-dff2-4ddc-a5f2-c7692bb3d9af)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.1.0\n        - org.springframework.boot:spring-boot-starter-jdbc:3.1.0\n            - org.springframework:spring-jdbc:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=31dfdf5b-aa99-47bf-b242-f8a77c3623ae)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-40167 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=31dfdf5b-aa99-47bf-b242-f8a77c3623ae)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=31dfdf5b-aa99-47bf-b242-f8a77c3623ae)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlet 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlet 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=31dfdf5b-aa99-47bf-b242-f8a77c3623ae)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34035 spring-security-web 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 6.1.0 from spring-boot-starter-security 3.1.0 (CVE-2023-34035 BDSA-2023-1821)"},"fullDescription":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.1.0  | 3.1.2  | 3.1.2 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=4fb56fee-6e89-40f0-a4bf-b99e3d99f579)\n\n\n## Description\nSpring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1821](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1821)([CVE-2023-34035](https://nvd.nist.gov/vuln/detail/CVE-2023-34035)) - Spring Security Vulnerable to Authorization Bypass due to Authorization Rule Misconfiguration via 'DispatcherServlet' and 'requestMatchers(String)'\n\n\n## Solution\nFixed in versions:\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/df239b6448ccf138b0c95b5575a88f33ac35cd9a) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/fe7bee9236146b29ed751d6cd9de48e87b6d2dfd) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/cf2c8da3d50647728ff1fb5c7c2e2e43cffe9232) commit.\n\nAfter upgrading to a fixed version, previously vulnerable endpoints may now generate error messages. Specific guidance to amend this has been provided by the vendor [here](https://spring.io/security/cve-2023-34035#Mitigation).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.1.0\n        - org.springframework.security:spring-security-web:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34034 spring-security-web 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-web 6.1.0 from spring-boot-starter-security 3.1.0 (CVE-2023-34034 BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.1.0  | 3.1.2  | 3.1.2 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-web 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=4fb56fee-6e89-40f0-a4bf-b99e3d99f579)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825)([CVE-2023-34034](https://nvd.nist.gov/vuln/detail/CVE-2023-34034)) - Spring Security Vulnerable to Security Mechanism Bypass in Spring WebFlux via Un-Prefixed Double Wildcard Pattern\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.1.0\n        - org.springframework.security:spring-security-web:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34055 spring-boot-starter-json 3.1.0: spring-boot-starter-web 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-json 3.1.0 from spring-boot-starter-web 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-json 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=f89d41a8-aba7-42bf-9974-fc8e517574d0)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.1.0\n        - org.springframework.boot:spring-boot-starter-json:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2018-20677 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2018-20677 BDSA-2018-4634)"},"fullDescription":{"text":"A stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=b444cf7e-0097-41bd-95c4-606c9d32aaac)\n\n\n## Description\nA stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2018-4634](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-4634)([CVE-2018-20677](https://nvd.nist.gov/vuln/detail/CVE-2018-20677)) - Bootstrap Vulnerable to Stored Cross-Site Scripting (XSS) via 'target' Attribute in Affix Plugin\n\n\n## Solution\nFixed in versions:\n\n* [**3.4.0**](https://github.com/twbs/bootstrap/releases/tag/v3.4.0) by [this](https://github.com/twbs/bootstrap/commit/2a5ba23ce8f041f3548317acc992ed8a736b609d) commit\n* [**4.0.0 alpha**](https://github.com/twbs/bootstrap/releases/tag/v4.0.0-alpha) by [this](https://github.com/twbs/bootstrap/commit/1e9e3316b6718af09bfe473f5eb364e4f9475731) commit.\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"A stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2018-20676 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2018-20676 BDSA-2018-4636)"},"fullDescription":{"text":"A reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=b444cf7e-0097-41bd-95c4-606c9d32aaac)\n\n\n## Description\nA reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2018-4636](https://openhub.net/vulnerabilities/bdsa/BDSA-2018-4636)([CVE-2018-20676](https://nvd.nist.gov/vuln/detail/CVE-2018-20676)) - Bootstrap Vulnerable to Reflected Cross-Site Scripting (XSS) via 'data-viewport' Attribute in Tooltip Component\n\n\n## Solution\nFixed in version [**3.4.0**](https://github.com/twbs/bootstrap/releases/tag/v3.4.0) by [this](https://github.com/twbs/bootstrap/commit/2a5ba23ce8f041f3548317acc992ed8a736b609d) commit.\nFixed in [**4.0.0-alpha**](https://github.com/twbs/bootstrap/releases/tag/v4.0.0-alpha) by [this](https://github.com/twbs/bootstrap/commit/3452e8dc8336c7a4151bcccdb9d3d4202f06f294) commit.\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"A reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2016-10735 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2016-10735 BDSA-2016-1585)"},"fullDescription":{"text":"Bootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=b444cf7e-0097-41bd-95c4-606c9d32aaac)\n\n\n## Description\nBootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2016-1585](https://openhub.net/vulnerabilities/bdsa/BDSA-2016-1585)([CVE-2016-10735](https://nvd.nist.gov/vuln/detail/CVE-2016-10735)) - Bootstrap Vulnerable to Cross-Site Scripting (XSS) via 'data-target' Attribute\n\n\n## Solution\nFixed in version [**4.0.0-beta.2**](https://github.com/twbs/bootstrap/releases/tag/v4.0.0-beta.2) by [this](https://github.com/twbs/bootstrap/commit/bcad4bcb5f5a9ef079b2883a48a698b35261e083) commit.\n\nFixed in version [**3.4.0**](https://github.com/twbs/bootstrap/releases/tag/v3.4.0) by [this](https://github.com/twbs/bootstrap/commit/29f9237f735b90dbc89e003db0c62dec2db0b308) commit and [this](https://github.com/twbs/bootstrap/commit/13bf8aeae3db71e28af69782328c22215795c169) commit.\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"Bootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2019-8331 bootstrap 3.3.7: org.webjars","shortDescription":{"text":"Direct Dependency: bootstrap 3.3.7 (CVE-2019-8331 BDSA-2019-0423)"},"fullDescription":{"text":"bootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| bootstrap 3.3.7  | 3.4.1  | 5.3.2 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=b444cf7e-0097-41bd-95c4-606c9d32aaac)\n\n\n## Description\nbootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2019-0423](https://openhub.net/vulnerabilities/bdsa/BDSA-2019-0423)([CVE-2019-8331](https://nvd.nist.gov/vuln/detail/CVE-2019-8331)) - bootstrap Vulnerable to Cross-site Scripting (XSS) via 'data-template', 'data-content' and 'data-title' Properties of 'tooltip' and 'popover' Plugin Content\n\n\n## Solution\nFixed in [**4.3.1**](https://github.com/twbs/bootstrap/releases/tag/v4.3.1) by [this](https://github.com/twbs/bootstrap/commit/7bc4d2e0bc65151b6f60dccad50c9c8f50252bd6) commit and [this](https://github.com/twbs/bootstrap/commit/10b97f6ed94168c749caa7b5f6a6e1504f4e0629) commit.\nFixed in [**3.4.1**](https://github.com/twbs/bootstrap/releases/tag/v3.4.1) by [this](https://github.com/twbs/bootstrap/commit/d821de271297a74a8d6a309de1d4cd9113dd77ed) commit and [this](https://github.com/twbs/bootstrap/commit/2c8abb9a4393addc5ffb39e649e09391c2fee701) commit.\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n\n","text":"bootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-client 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-client 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d25ec5e1-0f07-415d-a258-08c87870e65d)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n            - org.eclipse.jetty:jetty-client:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-client 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-client 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d25ec5e1-0f07-415d-a258-08c87870e65d)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n            - org.eclipse.jetty:jetty-client:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-client 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-client 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d25ec5e1-0f07-415d-a258-08c87870e65d)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n            - org.eclipse.jetty:jetty-client:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-client 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-client 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d25ec5e1-0f07-415d-a258-08c87870e65d)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n            - org.eclipse.jetty:jetty-client:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34055 spring-boot-starter-thymeleaf 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-thymeleaf 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=0aebac67-544b-4402-92fb-7b245a2fe268)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34034 spring-security-crypto 6.1.0: spring-security-test 6.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-crypto 6.1.0 from spring-security-test 6.1.0 (CVE-2023-34034 BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.1.0  | 6.2.0  | 6.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-crypto 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=aa5e8154-0f2d-4b95-b322-e59ac9b64260)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825)([CVE-2023-34034](https://nvd.nist.gov/vuln/detail/CVE-2023-34034)) - Spring Security Vulnerable to Security Mechanism Bypass in Spring WebFlux via Un-Prefixed Double Wildcard Pattern\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.security:spring-security-test:6.1.0\n        - org.springframework.security:spring-security-core:6.1.0\n            - org.springframework.security:spring-security-crypto:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34035 spring-security-crypto 6.1.0: spring-security-test 6.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-crypto 6.1.0 from spring-security-test 6.1.0 (CVE-2023-34035 BDSA-2023-1821)"},"fullDescription":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.1.0  | 6.2.0  | 6.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-crypto 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=aa5e8154-0f2d-4b95-b322-e59ac9b64260)\n\n\n## Description\nSpring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1821](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1821)([CVE-2023-34035](https://nvd.nist.gov/vuln/detail/CVE-2023-34035)) - Spring Security Vulnerable to Authorization Bypass due to Authorization Rule Misconfiguration via 'DispatcherServlet' and 'requestMatchers(String)'\n\n\n## Solution\nFixed in versions:\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/df239b6448ccf138b0c95b5575a88f33ac35cd9a) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/fe7bee9236146b29ed751d6cd9de48e87b6d2dfd) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/cf2c8da3d50647728ff1fb5c7c2e2e43cffe9232) commit.\n\nAfter upgrading to a fixed version, previously vulnerable endpoints may now generate error messages. Specific guidance to amend this has been provided by the vendor [here](https://spring.io/security/cve-2023-34035#Mitigation).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.security:spring-security-test:6.1.0\n        - org.springframework.security:spring-security-core:6.1.0\n            - org.springframework.security:spring-security-crypto:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39154 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39154 BDSA-2021-2573)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2573](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2573)([CVE-2021-39154](https://nvd.nist.gov/vuln/detail/CVE-2021-39154)) - XStream Vulnerable to Remote Code Execution (RCE) via Incomplete Deserialization Blacklist\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39145 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39145 BDSA-2021-2590)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2590](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2590)([CVE-2021-39145](https://nvd.nist.gov/vuln/detail/CVE-2021-39145)) - XStream is Vulnerable to Remote Code Execution (RCE) via Dangerous 'com.sun.org.apache.xpath.internal.objects.XString' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39144 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39144 BDSA-2021-2569)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2569](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2569)([CVE-2021-39144](https://nvd.nist.gov/vuln/detail/CVE-2021-39144)) - XStream Vulnerable to Arbitrary Command Execution via Incomplete Deserialization Blacklist of 'sun.tracing.*' Classes\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39141 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39141 BDSA-2021-2580)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2580](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2580)([CVE-2021-39141](https://nvd.nist.gov/vuln/detail/CVE-2021-39141)) - XStream Vulnerable to Remote Code Execution (RCE) via Incomplete Deserialization Blacklist of 'com.sun.xml.internal.ws.spi.*' Classes\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39148 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39148 BDSA-2021-2603)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2603](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2603)([CVE-2021-39148](https://nvd.nist.gov/vuln/detail/CVE-2021-39148)) - XStream is Vulnerable to Remote Code Execution (RCE) via Dangerous 'javax.naming.Binding' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-26217 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2020-26217 BDSA-2020-3372)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2020-3372](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-3372)([CVE-2020-26217](https://nvd.nist.gov/vuln/detail/CVE-2020-26217)) - Xstream Vulnerable to Remote Code Execution (RCE) via Incomplete Blacklist for Unmarshalling Specially Crafted Input\n\n\n## Solution\nFixed in **[1.4.14](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_14)** by [this](https://github.com/x-stream/xstream/commit/0fec095d534126931c99fd38e9c6d41f5c685c1a) commit.\n\nThe latest stable releases are available [here](https://github.com/x-stream/xstream/releases/).\n\n## Workaround\nThe vendor has supplied the following workarounds if you rely on the blacklisting feature and are unable to upgrade to **1.4.14**.\n\nFor version **1.4.13**\nAdd two lines to XStream's setup code:\n\u003e \n\u003e ```\n\u003e xstream.denyTypes(new String[]{ \"javax.imageio.ImageIO$ContainsFilter\" });\n\u003e xstream.denyTypes(new Class[]{ java.lang.ProcessBuilder.class });\n\u003e ```\n\u003e\nFor versions **1.4.7** to **1.4.12** deny at least the following types: javax.imageio.ImageIO$ContainsFilter, java.beans.EventHandler, java.lang.ProcessBuilder, java.lang.Void and void.\n\u003e```\n\u003e xstream.denyTypes(new String[]{ \"javax.imageio.ImageIO$ContainsFilter\" });\n\u003e xstream.denyTypes(new Class[]{ java.lang.ProcessBuilder.class, java.beans.EventHandler.class, java.lang.ProcessBuilder.class, java.lang.Void.class, void.class });\n\u003e ```\n\nFor versions **1.4.6** or below, register a converter to prevent the unmarshalling of the currently know critical types of the Java runtime.\n\u003e ```\n\u003e xstream.registerConverter(new Converter() {\n\u003e   public boolean canConvert(Class type) {\n\u003e     return type != null \u0026\u0026 (type == java.beans.EventHandler.class || type == java.lang.ProcessBuilder.class || type == java.lang.Void.class || void.class || type.getName().equals(\"javax.imageio.ImageIO$ContainsFilter\") || Proxy.isProxy(type));\n\u003e   }\n\u003e \n\u003e   public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n\u003e     throw new ConversionException(\"Unsupported type due to security reasons.\");\n\u003e   }\n\u003e \n\u003e   public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {\n\u003e     throw new ConversionException(\"Unsupported type due to security reasons.\");\n\u003e   }\n\u003e }, XStream.PRIORITY_LOW);\n\u003e ```\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2013-7285 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2013-7285 BDSA-2013-0046)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2013-0046](https://openhub.net/vulnerabilities/bdsa/BDSA-2013-0046)([CVE-2013-7285](https://nvd.nist.gov/vuln/detail/CVE-2013-7285)) - Xstream Vulnerable to Remote Code Execution (RCE) via Specially Crafted Input Stream\n\n\n## Solution\nFixed in version [**1.4.7**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_7) by [this](https://github.com/x-stream/xstream/commit/94666ae6dfe839410c73bdfeeb211374f04a2059) commit.\n\n## Workaround\nThe vendor supplies the following workaround:\n\n\"Users can register an own converter for dynamic proxies, the java.beans.EventHandler type or for the java.lang.ProcessBuilder type, that also protects against an attack for this special case:\n```\nxstream.registerConverter(new Converter() {\n  public boolean canConvert(Class type) {\n    return type != null \u0026\u0026 (type == java.beans.EventHandler || type == java.lang.ProcessBuilder || Proxy.isProxy(type));\n  }\n\n  public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n    throw new ConversionException(\"Unsupported type due to security reasons.\");\n  }\n\n  public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {\n    throw new ConversionException(\"Unsupported type due to security reasons.\");\n  }\n}, XStream.PRIORITY_LOW);\n```\n\"\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39146 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39146 BDSA-2021-2593)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2593](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2593)([CVE-2021-39146](https://nvd.nist.gov/vuln/detail/CVE-2021-39146)) - XStream is Vulnerable to Remote Code Execution (RCE) via Dangerous 'javax.swing.MultiUIDefaults' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39147 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39147 BDSA-2021-2602)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2602](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2602)([CVE-2021-39147](https://nvd.nist.gov/vuln/detail/CVE-2021-39147)) - XStream is Vulnerable to Remote Code Execution (RCE) via Dangerous 'javax.naming.CompoundName' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39139 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39139 BDSA-2021-2581)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [BDSA-2021-2581](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2581)([CVE-2021-39139](https://nvd.nist.gov/vuln/detail/CVE-2021-39139)) - XStream Vulnerable to Remote Code Execution (RCE) via Incomplete Deserialization Blacklist of 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl' Classes\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"9.1","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21349 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21349 BDSA-2021-0731)"},"fullDescription":{"text":"XStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0731](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0731)([CVE-2021-21349](https://nvd.nist.gov/vuln/detail/CVE-2021-21349)) - XStream Vulnerable to Server-Side Request Forgery (SSRF) via Crafted Input Stream\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](https://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21351 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21351 BDSA-2021-0721)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0721](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0721)([CVE-2021-21351](https://nvd.nist.gov/vuln/detail/CVE-2021-21351)) - Xstream Vulnerable to Remote Code Execution (RCE) via Input Stream Manipulation\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\n## Workaround\nOfficial workarounds for various versions are available [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21347 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21347 BDSA-2021-0722)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0722](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0722)([CVE-2021-21347](https://nvd.nist.gov/vuln/detail/CVE-2021-21347)) - XStream Vulnerable to Arbitrary Code Execution via Deserialization of 'JavacProcessingEnvironment$NameProcessIterator' Type\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2016-3674 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2016-3674 BDSA-2016-0027)"},"fullDescription":{"text":"XStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2016-0027](https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0027)([CVE-2016-3674](https://nvd.nist.gov/vuln/detail/CVE-2016-3674)) - XStream Vulnerable to XML Entity Entity Expansion via Crafted Document Type Definition\n\n\n## Solution\nThis vulnerability is fixed in version [**1.4.9**](http://repo.maven.apache.org/maven2/com/thoughtworks/xstream/xstream/1.4.9/).\n\n**Note**: Applications using one of the following parser implementations are still vulnerable:\n* `DOM` implementation from Java 5 runtime and below\n* `StAX` implementation from Java 6 runtime and below\n* `StAX` implementation from BEA (old reference implementation)\n* `XOM`\n\nThe latest stable releases are available [here](https://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor has recommended [here](https://x-stream.github.io/CVE-2016-3674.html) that users can opt to use one of the XML Pull Parser implementations in order to mitigate this issue.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n\n","text":"XStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39149 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39149 BDSA-2021-2565)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-2565](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2565)([CVE-2021-39149](https://nvd.nist.gov/vuln/detail/CVE-2021-39149)) - XStream Vulnerable to Remote Code Execution (RCE) via Unsafe 'CompositeInvocationHandlerImpl' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39150 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39150 BDSA-2021-2586)"},"fullDescription":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-2586](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2586)([CVE-2021-39150](https://nvd.nist.gov/vuln/detail/CVE-2021-39150)) - XStream Vulnerable to Server-Side Request Forgery (SSRF) via Unsafe SEI Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-29505 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-29505 BDSA-2021-1626)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-1626](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-1626)([CVE-2021-29505](https://nvd.nist.gov/vuln/detail/CVE-2021-29505)) - XStream Vulnerable to Arbitrary Code Execution via Deserialization of 'sun.jndi.toolkit.dir.LazySearchEnumerationImpl' Type\n\n\n## Solution\nFixed in [**1.4.17**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/24fac82191292c6ae25f94508d28b9823f83624f) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types.\n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-26259 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2020-26259 BDSA-2020-3780)"},"fullDescription":{"text":"XStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2020-3780](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-3780)([CVE-2020-26259](https://nvd.nist.gov/vuln/detail/CVE-2020-26259)) - XStream Vulnerable to Arbitrary File Deletion via Unmarshalling of Specially Crafted Input\n\n\n## Solution\nFixed in [**1.4.15**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_15) by [this](https://github.com/x-stream/xstream/commit/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers who configured the white listing approach of the Security Framework, without the affected classes on the whitelist, are not vulnerable.\n\nFor users of the blacklisting approach of the security framework, the vendor supplies a comprehensive workaround [here](https://x-stream.github.io/CVE-2020-26259.html).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"XStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21346 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21346 BDSA-2021-0726)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0726](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0726)([CVE-2021-21346](https://nvd.nist.gov/vuln/detail/CVE-2021-21346)) - XStream Vulnerable to Arbitrary Code Execution via Deserialization of 'sun.swing.SwingLazyValue' Type\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21345 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21345 BDSA-2021-0728)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0728](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0728)([CVE-2021-21345](https://nvd.nist.gov/vuln/detail/CVE-2021-21345)) - XStream Vulnerable to Arbitrary Command Execution via Deserialization of 'com.sun.corba.se.impl.activation.ServerTableEntry' Type\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types.\n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-77](https://cwe.mitre.org/data/definitions/77.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-77"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39153 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39153 BDSA-2021-2576)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-2576](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2576)([CVE-2021-39153](https://nvd.nist.gov/vuln/detail/CVE-2021-39153)) - XStream is Vulnerable to Remote Code Execution (RCE) via Dangerous 'PackageWriter' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21344 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21344 BDSA-2021-0730)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0730](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0730)([CVE-2021-21344](https://nvd.nist.gov/vuln/detail/CVE-2021-21344)) - XStream Vulnerable to Arbitrary Code Execution via Deserialization of JAXB 'Accessor$GetterSetterReflection' and 'com.sun.rowset.JdbcRowSetImpl' Types\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types.\n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21342 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21342 BDSA-2021-0736)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0736](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0736)([CVE-2021-21342](https://nvd.nist.gov/vuln/detail/CVE-2021-21342)) - XStream Vulnerable to Server-Side Request Forgery (SSRF) via Deserialization of 'DataTransferer$IndexOrderComparator' and 'URLDataSource' Types\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2020-26258 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2020-26258 BDSA-2020-3787)"},"fullDescription":{"text":"Xstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2020-3787](https://openhub.net/vulnerabilities/bdsa/BDSA-2020-3787)([CVE-2020-26258](https://nvd.nist.gov/vuln/detail/CVE-2020-26258)) - XStream Vulnerable to Information Disclosure via Server-Side Request Forgery through Unmarshalling of Specially Crafted Input\n\n\n## Solution\nFixed in [**1.4.15**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_15) by [this](https://github.com/x-stream/xstream/commit/6740c04b217aef02d44fba26402b35e0f6f493ce) commit.\n\n## Workaround\nFor users who do not use the [recommended](https://x-stream.github.io/security.html#framework) white listing approach of the security framework, the vendor has supplied a comprehensive workaround involving the blacklist approach [here](https://x-stream.github.io/CVE-2020-26258.html).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"Xstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39152 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39152 BDSA-2021-2587)"},"fullDescription":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-2587](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2587)([CVE-2021-39152](https://nvd.nist.gov/vuln/detail/CVE-2021-39152)) - XStream Vulnerable to Server-Side Request Forgery (SSRF) via Unsafe Nashorn Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21350 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21350 BDSA-2021-0724)"},"fullDescription":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-0724](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0724)([CVE-2021-21350](https://nvd.nist.gov/vuln/detail/CVE-2021-21350)) - Xstream Vulnerable to Remote Code Execution (RCE) via Input Stream Containing 'PriorityQueue'\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\n## Workaround\nOfficial workarounds for various versions are available [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-39151 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39151 BDSA-2021-2568)"},"fullDescription":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2021-2568](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2568)([CVE-2021-39151](https://nvd.nist.gov/vuln/detail/CVE-2021-39151)) - XStream Vulnerable to Remote Code Execution (RCE) via Unsafe 'KeyStoreResolver$KeyStoreIterator' Class Deserialization\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/releases).\n\n## Workaround\nUsers can manually prevent the deserialization of problematic classes by following the [guidance](https://x-stream.github.io/security.html#workaround) provided by the vendor.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2021-21343 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21343 BDSA-2021-0732)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-0732](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0732)([CVE-2021-21343](https://nvd.nist.gov/vuln/detail/CVE-2021-21343)) - XStream Vulnerable to Arbitrary File Deletion via Deserialization of 'DataTransferer$IndexOrderComparator' and 'java.io.FileInputStream' Types\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-41966 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2022-41966 BDSA-2022-3693)"},"fullDescription":{"text":"XStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2022-3693](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3693)([CVE-2022-41966](https://nvd.nist.gov/vuln/detail/CVE-2022-41966)) - XStream Vulnerable to Denial-of-Service (DoS) via Stack Overflow in Hash Processing Functionality\n\n\n## Solution\nFixed in version [**1.4.20**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_20) by [this](https://github.com/x-stream/xstream/commit/e9151f221b4969fb15b1e946d5d61dcdd459a391) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nThe vendor has stated [here](https://github.com/x-stream/xstream/security/advisories/GHSA-j563-grx4-pjpv) that the following workaround can be implemented:\n\n\u003e The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. Following types of the Java runtime are affected:\n\u003e\n\u003e * java.util.HashMap\n\u003e * java.util.HashSet\n\u003e * java.util.Hashtable\n\u003e * java.util.LinkedHashMap\n\u003e * java.util.LinkedHashSet\n\u003e Other third party collection implementations that use their element's hash code may also be affected\n\u003e A simple solution is to catch the StackOverflowError in the client code calling XStream.\n\u003e \n\u003e If your object graph does not use referenced elements at all, you may simply set the NO_REFERENCE mode:\n\u003e \n\u003e XStream xstream = new XStream();\n\u003e xstream.setMode(XStream.NO_REFERENCES);\n\u003e If your object graph contains neither a Hashtable, HashMap nor a HashSet (or one of the linked variants of it) then you can use the security framework to deny the usage of these types:\n\u003e \n\u003e XStream xstream = new XStream();\n\u003e xstream.denyTypes(new Class[]{\n\u003e  java.util.HashMap.class, java.util.HashSet.class, java.util.Hashtable.class, java.util.LinkedHashMap.class, java.util.LinkedHashSet.class\n\u003e });\n\u003e Unfortunately these types are very common. If you only use HashMap or HashSet and your XML refers these only as default map or set, you may additionally change the default implementation of java.util.Map and java.util.Set at unmarshalling time::\n\u003e \n\u003e xstream.addDefaultImplementation(java.util.TreeMap.class, java.util.Map.class);\n\u003e xstream.addDefaultImplementation(java.util.TreeSet.class, java.util.Set.class);\n\u003e However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"XStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2017-7957 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2017-7957 BDSA-2017-0661)"},"fullDescription":{"text":"A flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nA flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2017-0661](https://openhub.net/vulnerabilities/bdsa/BDSA-2017-0661)([CVE-2017-7957](https://nvd.nist.gov/vuln/detail/CVE-2017-7957)) - XStream (De)Serialization Denial of Service\n\n\n## Solution\nUpgrade to version **1.4.10** or later.\n\n## Workaround\nXStream contains since version 1.4.7 a security framework to prevent an \nattack described in CVE-2013-7285. This framework can also be used to \nsuppress the current vulnerability by setting:\n\nxstream.denyTypes(void.class, Void.class);\n\nUsers of older XStream releases can register an own converter for the 'void' \ntype, that also protects against this attack:\n\nxstream.registerConverter(new Converter() {\n  public boolean canConvert(Class type) {\n    return Void.class == type || void.class == type;\n  }\n  public Object unmarshal(HierarchicalStreamReader reader, \nUnmarshallingContext context) {\n    throw new ConversionException(\"Type void cannot have an instance\");\n  }\n  public void marshal(Object source, HierarchicalStreamWriter writer, \nMarshallingContext context) {\n    throw new ConversionException(\"Type void cannot have an instance\");\n  }\n}, XStream.PRIORITY_VERY_HIGH);\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"A flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-21341 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21341 BDSA-2021-0737)"},"fullDescription":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-0737](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0737)([CVE-2021-21341](https://nvd.nist.gov/vuln/detail/CVE-2021-21341)) - XStream Vulnerable to Denial-of-Service (DoS) via Deserialization of 'java.io.ByteArrayInputStream' Type\n\n\n## Solution\nFixed in [**1.4.16**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16) by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](http://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-835"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-40151 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2022-40151 BDSA-2022-2580)"},"fullDescription":{"text":"XStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2022-2580](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-2580)([CVE-2022-40151](https://nvd.nist.gov/vuln/detail/CVE-2022-40151)) - XStream Vulnerable to Denial-of-Service (DoS) via Stack Overflow during XML Data Serialization\n\n\n## Solution\nFixed in version [**1.4.20**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_20) by [this](https://github.com/x-stream/xstream/commit/e9151f221b4969fb15b1e946d5d61dcdd459a391) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","text":"XStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-121"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-43859 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-43859 BDSA-2022-0291)"},"fullDescription":{"text":"XStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2022-0291](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-0291)([CVE-2021-43859](https://nvd.nist.gov/vuln/detail/CVE-2021-43859)) - XStream Vulnerable to Denial-of-Service (DoS) via Object Injection\n\n\n## Solution\nFixed in [**1.4.19**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_19) by [this](https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846) commit.\n\nThe latest stable releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nPer the Vendor [workaround](https://x-stream.github.io/CVE-2021-43859.html):\n\n\u003e If your object graph does not use referenced elements at all, you may simply set the NO_REFERENCE mode:\n\u003e ```\n\u003e XStream xstream = new XStream();\n\u003e xstream.setMode(XStream.NO_REFERENCES);\n\u003e ```\n\u003e If your object graph contains neither a Hashtable, HashMap nor a HashSet (or one of the linked variants of it) then you can use the security framework to deny the usage of these types:\n\u003e ```\n\u003e XStream xstream = new XStream();\n\u003e xstream.denyTypes(new Class[]{\n\u003e \tjava.util.HashMap.class, java.util.HashSet.class, java.util.Hashtable.class, java.util.LinkedHashMap.class, java.util.LinkedHashSet.class\n\u003e });\n\u003e ```\n\u003e \n\u003e Unfortunately these types are very common. If you only use HashMap or HashSet and your XML refers these only as default map or set, you may additionally change the default implementation of java.util.Map and java.util.Set at unmarshalling time:\n\u003e \n\u003e ```\n\u003e xstream.addDefaultImplementation(java.util.TreeMap.class, java.util.Map.class);\n\u003e xstream.addDefaultImplementation(java.util.TreeSet.class, java.util.Set.class);\n\u003e ```\n\u003e However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"XStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-39140 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-39140 BDSA-2021-2582)"},"fullDescription":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-2582](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-2582)([CVE-2021-39140](https://nvd.nist.gov/vuln/detail/CVE-2021-39140)) - XStream Vulnerable to Denial of Service (DoS) via Incomplete Deserialization Blacklist of 'sun.reflect.annotation.AnnotationInvocationHandler' Classes\n\n\n## Solution\nFixed in version [**1.4.18**](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_18) by [this](https://github.com/x-stream/xstream/commit/652d72f38b33938c54fd3b2ef626cb7dce38001c) commit.\n\nThe latest releases can be found [here](https://github.com/x-stream/xstream/tags).\n\n## Workaround\nClasses that should be blacklisted for various versions of XStream are listed [here](https://x-stream.github.io/security.html#workaround).\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-184](https://cwe.mitre.org/data/definitions/184.html)\n\n","text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-184"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2021-21348 xstream 1.4.5: com.thoughtworks.xstream","shortDescription":{"text":"Direct Dependency: xstream 1.4.5 (CVE-2021-21348 BDSA-2021-0735)"},"fullDescription":{"text":"Xstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| xstream 1.4.5  | 1.4.20  | 1.4.20 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a15c9ae0-8262-43f3-a281-3fa59003b486)\n\n\n## Description\nXstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2021-0735](https://openhub.net/vulnerabilities/bdsa/BDSA-2021-0735)([CVE-2021-21348](https://nvd.nist.gov/vuln/detail/CVE-2021-21348)) - Xstream Vulnerable to Regular Expression Denial-of-Service (ReDoS) via Crafted Input Stream\n\n\n## Solution\nFixed in **[1.4.16](https://github.com/x-stream/xstream/releases/tag/XSTREAM_1_4_16)** by [this](https://github.com/x-stream/xstream/commit/d5e51177634afea7213b9dc2d21f101d2e258db9) commit.\n\nThe latest stable releases are available [here](https://x-stream.github.io/download.html).\n\n## Workaround\nThe vendor recommends the use of XStream's security framework to implement a whitelist for allowed types. \n\nThe vendor has made available a set of [workarounds](https://x-stream.github.io/security.html#workaround) detailing this feature.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Xstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-data-jpa 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=c7b334d3-3939-42b3-b49f-f023a3f0e119)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-orm 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-orm 6.0.9 from spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-orm 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=633bc3dd-51d4-42f1-b7ea-a00ae77884a7)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.1.0\n        - org.springframework.data:spring-data-jpa:3.1.0\n            - org.springframework:spring-orm:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-2318 undertow-core 2.3.6.Final: spring-boot-starter-undertow 3.1.0: io.undertow","shortDescription":{"text":"Transitive Dependency: undertow-core 2.3.6.Final from spring-boot-starter-undertow 3.1.0 (BDSA-2023-2318)"},"fullDescription":{"text":"Undertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-undertow 3.1.0  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| undertow-core 2.3.6.Final  | 2.3.10.SP1-redhat-00001  | 2.3.10.SP1-redhat-00001 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=9b15beec-8b01-4156-8877-b673f3e5b6a7)\n\n\n## Description\nUndertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2318](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2318) - Undertow Vulnerable to Denial-of-Service (DoS) via Excessive Memory Allocation due to Improper 'fileSizeThreshold' Attribute Handling\n\n\n\n## Solution\nFixed in versions:\n* [**2.3.9**](https://github.com/undertow-io/undertow/releases/tag/2.3.9.Final) by [this](https://github.com/undertow-io/undertow/commit/22ab63b40d5e523538db2096160ee084ee04b9c0) commit and [this](https://github.com/undertow-io/undertow/commit/52cf6a779c4cf17dfc4cf159aaca986b567b2025) commit.\n* [**2.2.27**](https://github.com/undertow-io/undertow/releases/tag/2.2.27.Final) by [this](https://github.com/undertow-io/undertow/commit/86209e5dd84d06708957ead659b7ed8daa7fb912) commit and [this](https://github.com/undertow-io/undertow/commit/7094d86be5f81012ae09e06c897db0e8714d5243) commit.\n\nThe latest stable releases are available [here](https://mvnrepository.com/artifact/io.undertow/undertow-core).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-undertow:3.1.0\n        - io.undertow:undertow-core:2.3.6.Final\n\n\n## References\nCommon Weakness Enumeration: [CWE-789](https://cwe.mitre.org/data/definitions/789.html)\n\n","text":"Undertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-789"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=6aee944c-9cd2-40c0-ab39-8a1ce517d765)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=6aee944c-9cd2-40c0-ab39-8a1ce517d765)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=6aee944c-9cd2-40c0-ab39-8a1ce517d765)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-server 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=6aee944c-9cd2-40c0-ab39-8a1ce517d765)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-44487 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d56bf957-cd04-4e60-a246-027bdf8daaee)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-40167 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d56bf957-cd04-4e60-a246-027bdf8daaee)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d56bf957-cd04-4e60-a246-027bdf8daaee)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-webapp 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-webapp 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d56bf957-cd04-4e60-a246-027bdf8daaee)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-webapp:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34035 spring-security-config 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 6.1.0 from spring-boot-starter-security 3.1.0 (CVE-2023-34035 BDSA-2023-1821)"},"fullDescription":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.1.0  | 3.1.2  | 3.1.2 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=110af57b-f089-4042-b88b-0ec79a1cb836)\n\n\n## Description\nSpring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1821](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1821)([CVE-2023-34035](https://nvd.nist.gov/vuln/detail/CVE-2023-34035)) - Spring Security Vulnerable to Authorization Bypass due to Authorization Rule Misconfiguration via 'DispatcherServlet' and 'requestMatchers(String)'\n\n\n## Solution\nFixed in versions:\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/df239b6448ccf138b0c95b5575a88f33ac35cd9a) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/fe7bee9236146b29ed751d6cd9de48e87b6d2dfd) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/cf2c8da3d50647728ff1fb5c7c2e2e43cffe9232) commit.\n\nAfter upgrading to a fixed version, previously vulnerable endpoints may now generate error messages. Specific guidance to amend this has been provided by the vendor [here](https://spring.io/security/cve-2023-34035#Mitigation).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.1.0\n        - org.springframework.security:spring-security-config:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34034 spring-security-config 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-config 6.1.0 from spring-boot-starter-security 3.1.0 (CVE-2023-34034 BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.1.0  | 3.1.2  | 3.1.2 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-config 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=110af57b-f089-4042-b88b-0ec79a1cb836)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825)([CVE-2023-34034](https://nvd.nist.gov/vuln/detail/CVE-2023-34034)) - Spring Security Vulnerable to Security Mechanism Bypass in Spring WebFlux via Un-Prefixed Double Wildcard Pattern\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.1.0\n        - org.springframework.security:spring-security-config:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34053 spring-tx 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-tx 6.0.9 from spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-tx 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=bd0c5d2a-f2b8-45cd-b979-abe7464d78fe)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.1.0\n        - org.springframework.data:spring-data-jpa:3.1.0\n            - org.springframework:spring-tx:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34035 spring-security-core 6.1.0: spring-security-test 6.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 6.1.0 from spring-security-test 6.1.0 (CVE-2023-34035 BDSA-2023-1821)"},"fullDescription":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.1.0  | 6.2.0  | 6.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=788f50a3-c7e8-485e-b8d1-327310574af2)\n\n\n## Description\nSpring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1821](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1821)([CVE-2023-34035](https://nvd.nist.gov/vuln/detail/CVE-2023-34035)) - Spring Security Vulnerable to Authorization Bypass due to Authorization Rule Misconfiguration via 'DispatcherServlet' and 'requestMatchers(String)'\n\n\n## Solution\nFixed in versions:\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/df239b6448ccf138b0c95b5575a88f33ac35cd9a) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/fe7bee9236146b29ed751d6cd9de48e87b6d2dfd) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/cf2c8da3d50647728ff1fb5c7c2e2e43cffe9232) commit.\n\nAfter upgrading to a fixed version, previously vulnerable endpoints may now generate error messages. Specific guidance to amend this has been provided by the vendor [here](https://spring.io/security/cve-2023-34035#Mitigation).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.security:spring-security-test:6.1.0\n        - org.springframework.security:spring-security-core:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34034 spring-security-core 6.1.0: spring-security-test 6.1.0: org.springframework.security","shortDescription":{"text":"Transitive Dependency: spring-security-core 6.1.0 from spring-security-test 6.1.0 (CVE-2023-34034 BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.1.0  | 6.2.0  | 6.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-core 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=788f50a3-c7e8-485e-b8d1-327310574af2)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825)([CVE-2023-34034](https://nvd.nist.gov/vuln/detail/CVE-2023-34034)) - Spring Security Vulnerable to Security Mechanism Bypass in Spring WebFlux via Un-Prefixed Double Wildcard Pattern\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.security:spring-security-test:6.1.0\n        - org.springframework.security:spring-security-core:6.1.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-46589 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (CVE-2023-46589 BDSA-2023-3298)"},"fullDescription":{"text":"Apache Tomcat is vulnerable to HTTP request smuggling when used behind a reverse proxy. This allows a remote attacker to append additional HTTP request onto valid HTTP requests and can be used to bypass validation, access restricted data, or perform actions on behalf of another user or group."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nApache Tomcat is vulnerable to HTTP request smuggling when used behind a reverse proxy. This allows a remote attacker to append additional HTTP request onto valid HTTP requests and can be used to bypass validation, access restricted data, or perform actions on behalf of another user or group.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-3298](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3298)([CVE-2023-46589](https://nvd.nist.gov/vuln/detail/CVE-2023-46589)) - Apache Tomcat Vulnerable to HTTP Request Smuggling due to Trailer Header Error Handling\n\n\n## Solution\nFixed in versions:\n\n* [**8.5.96**](https://github.com/apache/tomcat/releases/tag/8.5.96) by [this](https://github.com/apache/tomcat/commit/aa92971e879a519384c517febc39fd04c48d4642) commit.\n* [**9.0.83**](https://github.com/apache/tomcat/releases/tag/9.0.83) by [this](https://github.com/apache/tomcat/commit/7a2d8818fcea0b51747a67af9510ce7977245ebd) commit.\n* [**10.1.16**](https://github.com/apache/tomcat/releases/tag/10.1.16) by [this](https://github.com/apache/tomcat/commit/b5776d769bffeade865061bc8ecbeb2b56167b08) commit.\n* [**11.0.0-M11**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/6f181e1062a472bc5f0234980f66cbde42c1041b) commit.\n\nThe latest stable releases can be found [here](https://github.com/apache/tomcat/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-444](https://cwe.mitre.org/data/definitions/444.html)\n\n","text":"Apache Tomcat is vulnerable to HTTP request smuggling when used behind a reverse proxy. This allows a remote attacker to append additional HTTP request onto valid HTTP requests and can be used to bypass validation, access restricted data, or perform actions on behalf of another user or group."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-444"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-41080 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (CVE-2023-41080 BDSA-2023-2250)"},"fullDescription":{"text":"Apache Tomcat is vulnerable to open redirects because of insufficient input validation. This vulnerability affects ROOT (default) web applications that have been configured to use `FORM` authentication feature. It can allow an attacker to trick a victim into accessing a specially crafted URL that redirects to an attacker-controlled location.\n\n**Note:** The scope of this vulnerability is limited to the ROOT (default) web application."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nApache Tomcat is vulnerable to open redirects because of insufficient input validation. This vulnerability affects ROOT (default) web applications that have been configured to use `FORM` authentication feature. It can allow an attacker to trick a victim into accessing a specially crafted URL that redirects to an attacker-controlled location.\n\n**Note:** The scope of this vulnerability is limited to the ROOT (default) web application.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2250](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2250)([CVE-2023-41080](https://nvd.nist.gov/vuln/detail/CVE-2023-41080)) - Apache Tomcat Vulnerable to Open Redirects via Insufficient Input Validation in 'FormAuthenticator.java' File\n\n\n## Solution\nFixed in:\n* **[8.5.93](https://github.com/apache/tomcat/releases/tag/8.5.93)** by [this](https://github.com/apache/tomcat/commit/4998ad745b67edeadefe541c94ed029b53933d3b) commit,\n* **[9.0.80](https://github.com/apache/tomcat/releases/tag/9.0.80)** by [this](https://github.com/apache/tomcat/commit/77c0ce2d169efa248b64b992e547aad549ec906b) commit,\n* **[10.1.13](https://github.com/apache/tomcat/releases/tag/10.1.13)** by [this](https://github.com/apache/tomcat/commit/bb4624a9f3e69d495182ebfa68d7983076407a27) commit,\n* **[11.0.0-M11](https://github.com/apache/tomcat/releases/tag/11.0.0-M11)** by [this](https://github.com/apache/tomcat/commit/e3703c9abb8fe0d5602f6ba8a8f11d4b6940815a) commit.\n\nThe latest stable releases can be found [here](https://tomcat.apache.org/download-11.cgi).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-601](https://cwe.mitre.org/data/definitions/601.html)\n\n","text":"Apache Tomcat is vulnerable to open redirects because of insufficient input validation. This vulnerability affects ROOT (default) web applications that have been configured to use `FORM` authentication feature. It can allow an attacker to trick a victim into accessing a specially crafted URL that redirects to an attacker-controlled location.\n\n**Note:** The scope of this vulnerability is limited to the ROOT (default) web application."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-601"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34981 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (CVE-2023-34981 BDSA-2023-1572)"},"fullDescription":{"text":"Apache Tomcat is vulnerable to information exposure due to a regression causing improper handling of responses which did not include any HTTP headers. This could allow an attacker through AJP-based proxies to leak response headers from one request into another request."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nApache Tomcat is vulnerable to information exposure due to a regression causing improper handling of responses which did not include any HTTP headers. This could allow an attacker through AJP-based proxies to leak response headers from one request into another request.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1572](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1572)([CVE-2023-34981](https://nvd.nist.gov/vuln/detail/CVE-2023-34981)) - Apache Tomcat Vulnerable to Information Exposure via Leaked Response Headers Through AJP-Based Proxy\n\n\n## Solution\nFixed in:\n* [**8.5.89**](https://github.com/apache/tomcat/releases/tag/8.5.89) by [this](https://github.com/apache/tomcat/commit/2214c80305) commit\n* [**9.0.75**](https://github.com/apache/tomcat/releases/tag/9.0.75) by [this](https://github.com/apache/tomcat/commit/2f0ca23784) commit\n* [**10.1.9**](https://github.com/apache/tomcat/releases/tag/10.1.9) by [this](https://github.com/apache/tomcat/commit/f0742f47b9) commit\n* [**11.0.0-M6**](https://github.com/apache/tomcat/releases/tag/11.0.0-M6) by [this](https://github.com/apache/tomcat/commit/739c7381aed22b7636351caf885ddc519ab6b442) commit\n\nThe latest stable releases are available [here](https://tomcat.apache.org/download.cgi).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n\n","text":"Apache Tomcat is vulnerable to information exposure due to a regression causing improper handling of responses which did not include any HTTP headers. This could allow an attacker through AJP-based proxies to leak response headers from one request into another request."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-200"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-45648 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (CVE-2023-45648 BDSA-2023-2726)"},"fullDescription":{"text":"Apache Tomcat is vulnerable to HTTP request smuggling due to improper parsing of HTTP trailer within the header. An attacker could exploit this vulnerability by supplying a specially crafted HTTP request containing invalid trailer field names or values from a reversed proxy, in order to bypass security access controls such as a web application firewall (WAF) or an intrusion detection system (IDS)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nApache Tomcat is vulnerable to HTTP request smuggling due to improper parsing of HTTP trailer within the header. An attacker could exploit this vulnerability by supplying a specially crafted HTTP request containing invalid trailer field names or values from a reversed proxy, in order to bypass security access controls such as a web application firewall (WAF) or an intrusion detection system (IDS).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2726](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2726)([CVE-2023-45648](https://nvd.nist.gov/vuln/detail/CVE-2023-45648)) - Apache Tomcat Vulnerable to HTTP Request Smuggling via Improper Validation of HTTP Trailer Header Field Parsing in 'parseHeader()' Functions\n\n\n## Solution\nFixed in:\n* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/c83fe47725) commit,\n* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/5958324563) commit,\n* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/8ecff30650) commit,\n* [**11.0.0-m12**](https://github.com/apache/tomcat/releases/tag/11.0.0-m12) by [this](https://github.com/apache/tomcat/commit/eb5c094e5560764cda436362254997511a3ca1f6) commit.\n\nThe latest stable releases can be found [here](https://github.com/apache/tomcat/releases).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Apache Tomcat is vulnerable to HTTP request smuggling due to improper parsing of HTTP trailer within the header. An attacker could exploit this vulnerability by supplying a specially crafted HTTP request containing invalid trailer field names or values from a reversed proxy, in order to bypass security access controls such as a web application firewall (WAF) or an intrusion detection system (IDS)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-42795 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (CVE-2023-42795 BDSA-2023-2736)"},"fullDescription":{"text":"Apache Tomcat contains an information exposure vulnerability due to insufficient error handling within the internal object recycling method. An attacker could exploit this issue to gain unauthorized access to sensitive information contained within the request/response when an error in recycling."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nApache Tomcat contains an information exposure vulnerability due to insufficient error handling within the internal object recycling method. An attacker could exploit this issue to gain unauthorized access to sensitive information contained within the request/response when an error in recycling.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2736](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2736)([CVE-2023-42795](https://nvd.nist.gov/vuln/detail/CVE-2023-42795)) - Apache Tomcat Vulnerable to Information Exposure via Internal Object Recycling in 'recycle()' Methods\n\n\n## Solution\nFixed in:\n* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/30f8063d7a) commit,\n* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/44d05d75d6) commit,\n* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/9375d67106) commit,\n* [**11.0.0-m12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/d6db22e411307c97ddf78315c15d5889356eca38) commit. \n\nThe latest stable releases can be found [here](https://github.com/apache/tomcat/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-459](https://cwe.mitre.org/data/definitions/459.html)\n\n","text":"Apache Tomcat contains an information exposure vulnerability due to insufficient error handling within the internal object recycling method. An attacker could exploit this issue to gain unauthorized access to sensitive information contained within the request/response when an error in recycling."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-459"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-2728 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","shortDescription":{"text":"Transitive Dependency: tomcat-embed-el 10.1.8 from spring-boot-starter-validation 3.1.0 (BDSA-2023-2728)"},"fullDescription":{"text":"Apache Tomcat contains a denial-of-service (DoS) vulnerability due to improper session management. An attacker could exploit this vulnerability by uploading an arbitrary file, which will initialize a stream connection through the session processing which may fail to close the stream connection, resulting in the temporary file to remain stored within the disk. This could potentially lead to disk storage becoming full as the temporary files are not being removed, resulting in a denial-of-service (DoS) condition when disk memory resources have been exhausted."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| tomcat-embed-el 10.1.8  | 10.1.16  | 10.1.16 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=d45afaaf-fa11-4b67-b0f9-877cc1386e1f)\n\n\n## Description\nApache Tomcat contains a denial-of-service (DoS) vulnerability due to improper session management. An attacker could exploit this vulnerability by uploading an arbitrary file, which will initialize a stream connection through the session processing which may fail to close the stream connection, resulting in the temporary file to remain stored within the disk. This could potentially lead to disk storage becoming full as the temporary files are not being removed, resulting in a denial-of-service (DoS) condition when disk memory resources have been exhausted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2728](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2728) - Apache Tomcat Vulnerable to Denial-of-Service (DoS) via Improper Session Management in 'FileUpload' Functionality\n\n\n\n## Solution\nFixed in:\n* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/36427d45ac) commit\n* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/523de2495d) commit\n* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/a2fd61dc9a) commit\n* [**11.0.0-m11**](https://github.com/apache/tomcat/releases/tag/11.0.0-M11) by [this](https://github.com/apache/tomcat/commit/4d7f4a03c394e174c8bbef3654167161cc36c937) commit. \n\nThe latest stable releases can be found [here](https://github.com/apache/tomcat/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.apache.tomcat.embed:tomcat-embed-el:10.1.8\n\n\n## References\nCommon Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n\n","text":"Apache Tomcat contains a denial-of-service (DoS) vulnerability due to improper session management. An attacker could exploit this vulnerability by uploading an arbitrary file, which will initialize a stream connection through the session processing which may fail to close the stream connection, resulting in the temporary file to remain stored within the disk. This could potentially lead to disk storage becoming full as the temporary files are not being removed, resulting in a denial-of-service (DoS) condition when disk memory resources have been exhausted."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"warning"}},{"id":"BDSA-2023-3341 logback-core 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-core 1.4.7 from spring-boot-starter-validation 3.1.0 (BDSA-2023-3341)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-core 1.4.7  | 1.4.14  | 1.4.14 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=e317c37c-54ef-4b62-b938-b348ff752da6)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3341](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3341) - Logback Vulnerable to Denial-of-Service (DoS) via Sending Malicious Data to Receiver\n\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.springframework.boot:spring-boot-starter-logging:3.1.0\n                - ch.qos.logback:logback-classic:1.4.7\n                    - ch.qos.logback:logback-core:1.4.7\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-6378 logback-core 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","shortDescription":{"text":"Transitive Dependency: logback-core 1.4.7 from spring-boot-starter-validation 3.1.0 (CVE-2023-6378 BDSA-2023-3307)"},"fullDescription":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| logback-core 1.4.7  | 1.4.14  | 1.4.14 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=e317c37c-54ef-4b62-b938-b348ff752da6)\n\n\n## Description\nLogback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3307](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3307)([CVE-2023-6378](https://nvd.nist.gov/vuln/detail/CVE-2023-6378)) - Logback Vulnerable to Denial-of-Service (DoS) via Sending Malicious Data to Receiver\n\n\n## Solution\nFixed in versions:\n* [**1.2.13**](https://github.com/qos-ch/logback/releases/tag/v_1.2.13) by [this](https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3) commit.\n* [**1.3.14**](https://github.com/qos-ch/logback/releases/tag/v_1.3.14) by [this](https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n* [**1.4.14**](https://github.com/qos-ch/logback/releases/tag/v_1.4.14) by [this](https://github.com/qos-ch/logback/commit/9c782b45be4abdafb7e17481e24e7354c2acd1eb) commit and [this](https://github.com/qos-ch/logback/commit/7018a3609c7bcc9dc7bf5903509901a986e5f578) commit.\n\nThe latest stable releases can be found [here](https://github.com/qos-ch/logback/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.springframework.boot:spring-boot-starter-logging:3.1.0\n                - ch.qos.logback:logback-classic:1.4.7\n                    - ch.qos.logback:logback-core:1.4.7\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-beans 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-beans 6.0.9 from spring-boot-starter-web 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-beans 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=9092104c-2a53-4834-89d1-33f800be27cb)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.1.0\n        - org.springframework:spring-web:6.0.9\n            - org.springframework:spring-beans:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-jdbc 3.1.0: spring-boot-starter-data-jpa 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-jdbc 3.1.0 from spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-jdbc 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=559608a2-71ce-435a-b557-04feed460281)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.1.0\n        - org.springframework.boot:spring-boot-starter-jdbc:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=f7a83ef4-1fe2-4378-8648-306af7e0e897)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n            - org.eclipse.jetty:jetty-util:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-40167 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=f7a83ef4-1fe2-4378-8648-306af7e0e897)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n            - org.eclipse.jetty:jetty-util:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=f7a83ef4-1fe2-4378-8648-306af7e0e897)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n            - org.eclipse.jetty:jetty-util:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-util 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-util 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=f7a83ef4-1fe2-4378-8648-306af7e0e897)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n            - org.eclipse.jetty:jetty-util:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34053 spring-expression 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-expression 6.0.9 from spring-boot-starter-web 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-expression 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=bb15972b-a157-4c82-8139-09cb660e21ed)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.1.0\n        - org.springframework:spring-webmvc:6.0.9\n            - org.springframework:spring-expression:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-aop 6.0.9: spring-boot-starter-security 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aop 6.0.9 from spring-boot-starter-security 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.1.0  | 3.1.2  | 3.1.2 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aop 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=049b5bd2-e9d7-438a-a79c-4f38cbcaa973)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-security:3.1.0\n        - org.springframework:spring-aop:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-validation 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-validation 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a0863d0a-8eb8-4d87-89f4-ba9d32a700df)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter 3.1.0: spring-boot-starter-validation 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter 3.1.0 from spring-boot-starter-validation 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=b742a7e1-4d49-4c88-83bb-14ffc0c2b776)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","shortDescription":{"text":"Transitive Dependency: http2-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| http2-server 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a3c5e93f-f649-46d1-8777-6a537a0a871b)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty.http2:http2-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","shortDescription":{"text":"Transitive Dependency: http2-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| http2-server 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a3c5e93f-f649-46d1-8777-6a537a0a871b)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty.http2:http2-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","shortDescription":{"text":"Transitive Dependency: http2-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| http2-server 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a3c5e93f-f649-46d1-8777-6a537a0a871b)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty.http2:http2-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","shortDescription":{"text":"Transitive Dependency: http2-server 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| http2-server 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=a3c5e93f-f649-46d1-8777-6a537a0a871b)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty.http2:http2-server:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34053 spring-core 6.0.9: spring-boot-starter-test 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-core 6.0.9 from spring-boot-starter-test 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-core 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=deb7fb27-f9bd-474b-9906-edb769e24dd4)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-test:3.1.0\n        - org.springframework:spring-core:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-41327 wiremock 3.0.0-beta-2: com.github.tomakehurst","shortDescription":{"text":"Direct Dependency: wiremock 3.0.0-beta-2 (CVE-2023-41327 BDSA-2023-2379)"},"fullDescription":{"text":"WireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | 3.0.1  | 3.0.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=0136c091-c5fc-4df8-966a-4c501cc1ca8b)\n\n\n## Description\nWireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2379](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2379)([CVE-2023-41327](https://nvd.nist.gov/vuln/detail/CVE-2023-41327)) - WireMock Vulnerable to Server-Side Request Forgery (SSRF) via 'Webhooks.java' File\n\n\n## Solution\nFixed in [**2.35.1**](https://github.com/tomakehurst/wiremock/releases/tag/2.35.1) by [this](https://github.com/tomakehurst/wiremock/commit/90a37e10) commit and in [**3.0.3**](https://github.com/tomakehurst/wiremock/releases/tag/3.0.3) by [this](https://github.com/tomakehurst/wiremock/commit/92d77937) commit.\n\nThe latest stable releases can be found [here](https://github.com/wiremock/wiremock/releases).\n\n## Workaround\nThe vendor has stated the following as a workaround for this issue:\n \u003e Use external firewall rules to define the list of permitted destinations.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-918](https://cwe.mitre.org/data/definitions/918.html)\n\n","text":"WireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-918"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-41329 wiremock 3.0.0-beta-2: com.github.tomakehurst","shortDescription":{"text":"Direct Dependency: wiremock 3.0.0-beta-2 (CVE-2023-41329 BDSA-2023-2375)"},"fullDescription":{"text":"WireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | 3.0.1  | 3.0.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=0136c091-c5fc-4df8-966a-4c501cc1ca8b)\n\n\n## Description\nWireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2375](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2375)([CVE-2023-41329](https://nvd.nist.gov/vuln/detail/CVE-2023-41329)) - WireMock Vulnerable to Domain Restriction Bypass via DNS Rebinding in 'NetworkAddressRules.java' File\n\n\n## Solution\nFixed in [**2.35.1**](https://github.com/wiremock/wiremock/releases/tag/2.35.1) by [this](https://github.com/wiremock/wiremock/commit/20adc25d) commit and in [**3.0.3**](https://github.com/tomakehurst/wiremock/releases/tag/3.0.3) by [this](https://github.com/tomakehurst/wiremock/commit/0f72091c) commit.\n\nThe latest stable releases can be found [here](https://github.com/wiremock/wiremock/releases).\n\n## Workaround\nThe vendor has supplied the following workaround for this issue:\n\u003e * **Option 1**: Configure WireMock to use IP addresses instead of the domain names in the outbound URLs subject to DNS rebinding.\n\u003e * **Option 2**: Use external firewall rules to define the list of permitted destinations.\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-350](https://cwe.mitre.org/data/definitions/350.html)\n\n","text":"WireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-350"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-34055 spring-boot-starter-web 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-web 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=ab039293-266e-47fb-92ef-0e756c909989)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-24998 commons-fileupload 1.4: wiremock 3.0.0-beta-2: commons-fileupload","shortDescription":{"text":"Transitive Dependency: commons-fileupload 1.4 from wiremock 3.0.0-beta-2 (CVE-2023-24998 BDSA-2023-0357)"},"fullDescription":{"text":"Apache Commons FileUpload does not sufficiently limit the the number of request parts that can be received via user input. An attacker can exploit this flaw by supplying a malicious upload or series of uploads and cause excessive resource allocation. This can trigger a denial-of-service (DoS).\n\n**Note:** This vulnerability was not properly fixed in Apache Tomcat and required an additional disclosure as **CVE-2023-28709** (**BDSA-2023-1242**). The fix for Apache Commons FileUpload was not affected."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| commons-fileupload 1.4  | 1.5  | 1.5 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=308faf08-0487-4444-8bce-c97150e45d6a)\n\n\n## Description\nApache Commons FileUpload does not sufficiently limit the the number of request parts that can be received via user input. An attacker can exploit this flaw by supplying a malicious upload or series of uploads and cause excessive resource allocation. This can trigger a denial-of-service (DoS).\n\n**Note:** This vulnerability was not properly fixed in Apache Tomcat and required an additional disclosure as **CVE-2023-28709** (**BDSA-2023-1242**). The fix for Apache Commons FileUpload was not affected.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-0357](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-0357)([CVE-2023-24998](https://nvd.nist.gov/vuln/detail/CVE-2023-24998)) - Apache Commons FileUpload Vulnerable to Denial-of-Service (DoS) via Excessive Resource Allocation due to Insufficient Limiting of the Number of Request Parts\n\n\n## Solution\nFixed in Apache Commons FileUpload  version [**1.5-RC1**](https://github.com/apache/commons-fileupload/releases/tag/commons-fileupload-1.5-RC1) by [this](https://github.com/apache/commons-fileupload/commit/e20c04990f7420ca917e96a84cec58b13a1b3d17) commit.\n\nThe latest stable releases of Apache Commons FileUpload can be found [here](https://github.com/apache/commons-fileupload/tags).\n\nHowever, it is stated that Apache Commons FileUpload does not enable any limits by default. Thus, after applying the fixing commit, the new configuration option `FileUploadBase#setFileCountMax` must be explicitly configured.\n\nFixed in Apache Tomcat:\n* [**8.5.88**](https://github.com/apache/tomcat/releases/tag/8.5.88) by [this](https://github.com/apache/tomcat/commit/5badf94e79) commit,\n* [**9.0.74**](https://github.com/apache/tomcat/releases/tag/9.0.74) by [this](https://github.com/apache/tomcat/commit/fbd8142162) commit,\n* [**10.1.8**](https://github.com/apache/tomcat/releases/tag/10.1.8) by [this](https://github.com/apache/tomcat/commit/ba848da71c) commit,\n* [**11.0.0-M5**](https://github.com/apache/tomcat/releases/tag/11.0.0-M5) by [this](https://github.com/apache/tomcat/commit/d53d8e7f77042cc32a3b98f589496a1ef5088e38) commit.\n\nThe latest stable releases of Apache Tomcat are available [here](https://github.com/apache/tomcat/tags).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - commons-fileupload:commons-fileupload:1.4\n\n\n## References\nCommon Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","text":"Apache Commons FileUpload does not sufficiently limit the the number of request parts that can be received via user input. An attacker can exploit this flaw by supplying a malicious upload or series of uploads and cause excessive resource allocation. This can trigger a denial-of-service (DoS).\n\n**Note:** This vulnerability was not properly fixed in Apache Tomcat and required an additional disclosure as **CVE-2023-28709** (**BDSA-2023-1242**). The fix for Apache Commons FileUpload was not affected."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-770"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-security 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-security 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-security 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=31561dcb-89f4-4483-833d-28ecb9627dd5)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-logging 3.1.0: spring-boot-starter-validation 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-logging 3.1.0 from spring-boot-starter-validation 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-logging 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=bd0f39f9-c6d9-43d1-8194-bef238e1d08f)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.springframework.boot:spring-boot-starter-logging:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-actuator 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-actuator 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-actuator 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=24e88fec-8ba4-4674-a664-76a6fdea3b9a)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-autoconfigure 3.1.0: spring-boot-starter-validation 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-autoconfigure 3.1.0 from spring-boot-starter-validation 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-autoconfigure 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=0d8b6b98-6e53-4183-9642-e10ac3042287)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.springframework.boot:spring-boot-autoconfigure:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-web 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-web 6.0.9 from spring-boot-starter-web 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-web 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=7db0c340-ec32-4b00-92d5-ea85d89368cf)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.1.0\n        - org.springframework:spring-web:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-test 3.1.0: org.springframework.boot","shortDescription":{"text":"Direct Dependency: spring-boot-starter-test 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-test 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=becbb363-52bf-4085-aeef-06896e4fd4db)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","direct_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-context 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-context 6.0.9 from spring-boot-starter-web 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-context 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=01b33a89-44d1-4c99-ac5b-4c6226643a33)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.1.0\n        - org.springframework:spring-webmvc:6.0.9\n            - org.springframework:spring-context:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5a66906f-2f5e-465d-bca5-eeeade423179)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-io:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-40167 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5a66906f-2f5e-465d-bca5-eeeade423179)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-io:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5a66906f-2f5e-465d-bca5-eeeade423179)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-io:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-io 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-io 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5a66906f-2f5e-465d-bca5-eeeade423179)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-io:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-38286 thymeleaf 3.1.1.RELEASE: spring-boot-starter-thymeleaf 3.1.0: org.thymeleaf","shortDescription":{"text":"Transitive Dependency: thymeleaf 3.1.1.RELEASE from spring-boot-starter-thymeleaf 3.1.0 (CVE-2023-38286 BDSA-2023-1804)"},"fullDescription":{"text":"Thymeleaf is vulnerable to sandbox escape due to insufficient restrictions on the finding and invoking of methods via the Java reflection API. The impacts of this vulnerability depends on how an application uses Thymeleaf to render HTML. The reporter of this issue demonstrated how this could be leveraged to achieve server-side template injection (SSTI) leading to remote code execution (RCE) in Spring Boot Admin Server with MailNotifier enabled."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-thymeleaf 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| thymeleaf 3.1.1.RELEASE  | 3.1.2.RELEASE  | 3.1.2.RELEASE |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=c0e144de-5cbe-48cf-b201-f278d2aeaabc)\n\n\n## Description\nThymeleaf is vulnerable to sandbox escape due to insufficient restrictions on the finding and invoking of methods via the Java reflection API. The impacts of this vulnerability depends on how an application uses Thymeleaf to render HTML. The reporter of this issue demonstrated how this could be leveraged to achieve server-side template injection (SSTI) leading to remote code execution (RCE) in Spring Boot Admin Server with MailNotifier enabled.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1804](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1804)([CVE-2023-38286](https://nvd.nist.gov/vuln/detail/CVE-2023-38286)) - Thymeleaf Vulnerable to Sandbox Escape via Reflection Injection\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-thymeleaf:3.1.0\n        - org.thymeleaf:thymeleaf-spring6:3.1.1.RELEASE\n            - org.thymeleaf:thymeleaf:3.1.1.RELEASE\n\n\n## References\nCommon Weakness Enumeration: [CWE-265](https://cwe.mitre.org/data/definitions/265.html)\n\n","text":"Thymeleaf is vulnerable to sandbox escape due to insufficient restrictions on the finding and invoking of methods via the Java reflection API. The impacts of this vulnerability depends on how an application uses Thymeleaf to render HTML. The reporter of this issue demonstrated how this could be leveraged to achieve server-side template injection (SSTI) leading to remote code execution (RCE) in Spring Boot Admin Server with MailNotifier enabled."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-265"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34055 spring-boot-starter-aop 3.1.0: spring-boot-starter-data-jpa 3.1.0: org.springframework.boot","shortDescription":{"text":"Transitive Dependency: spring-boot-starter-aop 3.1.0 from spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34055 BDSA-2023-3275)"},"fullDescription":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-aop 3.1.0  | 3.2.0  | 3.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=63da010d-7635-4715-9476-ffdfdda4b956)\n\n\n## Description\nSpring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3275](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3275)([CVE-2023-34055](https://nvd.nist.gov/vuln/detail/CVE-2023-34055)) - Spring Boot Vulnerable to Denial-of-Service (DoS) via Web Metrics Endpoint\n\n\n## Solution\nFixed in:\n* [**3.1.6**](https://github.com/spring-projects/spring-boot/releases/tag/v3.1.6)\n* [**3.0.13**](https://github.com/spring-projects/spring-boot/releases/tag/v3.0.13)\n* [**2.7.18**](https://github.com/spring-projects/spring-boot/releases/tag/v2.7.18)\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-boot/releases).\n\n## Workaround\nThe vendor notes the following:\n\u003e As a temporary workaround, Spring Boot users can choose to disable web metrics with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.1.0\n        - org.springframework.boot:spring-boot-starter-aop:3.1.0\n\n\n## References\n\n","text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-44487 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-proxy 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-proxy 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=c0c76461-56af-4d8a-8a6e-622f36db86fc)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-proxy 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-proxy 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=c0c76461-56af-4d8a-8a6e-622f36db86fc)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-proxy 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-proxy 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=c0c76461-56af-4d8a-8a6e-622f36db86fc)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-proxy 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-proxy 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=c0c76461-56af-4d8a-8a6e-622f36db86fc)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-proxy:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-44487 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5da9f655-4387-44d9-a904-ed3d19d1b6b9)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n            - org.eclipse.jetty:jetty-security:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5da9f655-4387-44d9-a904-ed3d19d1b6b9)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n            - org.eclipse.jetty:jetty-security:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5da9f655-4387-44d9-a904-ed3d19d1b6b9)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n            - org.eclipse.jetty:jetty-security:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-security 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-security 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=5da9f655-4387-44d9-a904-ed3d19d1b6b9)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlet:11.0.15\n            - org.eclipse.jetty:jetty-security:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-44487 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=ec512df4-39a9-472c-ac7d-bc29ab5cc673)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-36478 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=ec512df4-39a9-472c-ac7d-bc29ab5cc673)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-40167 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=ec512df4-39a9-472c-ac7d-bc29ab5cc673)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-servlets 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-servlets 11.0.15  | 11.0.18  | 11.0.18 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=ec512df4-39a9-472c-ac7d-bc29ab5cc673)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-servlets:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}},{"id":"CVE-2023-35116 jackson-databind 2.15.0: jjwt 0.9.1: com.fasterxml.jackson.core","shortDescription":{"text":"Transitive Dependency: jackson-databind 2.15.0 from jjwt 0.9.1 (CVE-2023-35116 BDSA-2023-1491)"},"fullDescription":{"text":"A stack overflow has been discovered in Jackson-Databind. A local attacker could potentially exploit this issue if they have means to control an in memory cyclic object, which could allow them to exhaust stack memory resources, leading to a denial-of-service (DoS) via a crash.\n\n**Note:** The maintainers of this product contest the validity of this issue. There is no feasible method for a remote attacker to construct and serialize the required object that is shown in the reporter's reproduction of this issue. There is an [ongoing effort](https://github.com/FasterXML/jackson-databind/issues/3972#issuecomment-1597236026) to have the corresponding CVE record for this issue rejected. A [commit](https://github.com/apache/kafka/commit/dcd8c7d05f2f22f2d815405e7ab3ad7439669239) has been applied that will suppress dependency check warning for this CVE."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jjwt 0.9.1  | 0.12.3  | 0.12.3 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jackson-databind 2.15.0  | 2.16.0  | 2.16.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=60a5d8d9-3d8c-478c-aa7c-6ffbc7cf3bb0)\n\n\n## Description\nA stack overflow has been discovered in Jackson-Databind. A local attacker could potentially exploit this issue if they have means to control an in memory cyclic object, which could allow them to exhaust stack memory resources, leading to a denial-of-service (DoS) via a crash.\n\n**Note:** The maintainers of this product contest the validity of this issue. There is no feasible method for a remote attacker to construct and serialize the required object that is shown in the reporter's reproduction of this issue. There is an [ongoing effort](https://github.com/FasterXML/jackson-databind/issues/3972#issuecomment-1597236026) to have the corresponding CVE record for this issue rejected. A [commit](https://github.com/apache/kafka/commit/dcd8c7d05f2f22f2d815405e7ab3ad7439669239) has been applied that will suppress dependency check warning for this CVE.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-1491](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1491)([CVE-2023-35116](https://nvd.nist.gov/vuln/detail/CVE-2023-35116)) - Jackson-Databind Vulnerable to Denial-of-Service (DoS) via Stack Overflow in 'map' Parameter\n\n\n\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - io.jsonwebtoken:jjwt:0.9.1\n        - com.fasterxml.jackson.core:jackson-databind:2.15.0\n\n\n## References\nCommon Weakness Enumeration: [CWE-674](https://cwe.mitre.org/data/definitions/674.html)\n\n","text":"A stack overflow has been discovered in Jackson-Databind. A local attacker could potentially exploit this issue if they have means to control an in memory cyclic object, which could allow them to exhaust stack memory resources, leading to a denial-of-service (DoS) via a crash.\n\n**Note:** The maintainers of this product contest the validity of this issue. There is no feasible method for a remote attacker to construct and serialize the required object that is shown in the reporter's reproduction of this issue. There is an [ongoing effort](https://github.com/FasterXML/jackson-databind/issues/3972#issuecomment-1597236026) to have the corresponding CVE record for this issue rejected. A [commit](https://github.com/apache/kafka/commit/dcd8c7d05f2f22f2d815405e7ab3ad7439669239) has been applied that will suppress dependency check warning for this CVE."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-674"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-aspects 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-aspects 6.0.9 from spring-boot-starter-data-jpa 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-data-jpa 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-aspects 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=aee0b489-8ec3-44da-b574-83f787b906dd)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-data-jpa:3.1.0\n        - org.springframework:spring-aspects:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-34053 spring-webmvc 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","shortDescription":{"text":"Transitive Dependency: spring-webmvc 6.0.9 from spring-boot-starter-web 3.1.0 (CVE-2023-34053 BDSA-2023-3268)"},"fullDescription":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-web 3.1.0  | 3.2.0  | 3.2.0 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-webmvc 6.0.9  | 6.1.1  | 6.1.1 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=04e2b542-c1e0-4145-af43-67272eb8d6a1)\n\n\n## Description\nSpring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-3268](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-3268)([CVE-2023-34053](https://nvd.nist.gov/vuln/detail/CVE-2023-34053)) - Spring Framework Vulnerable to Denial-of-Service (DoS) via Specially Crafted HTTP Requests Involving an 'ObservationRegistry' Instance\n\n\n## Solution\nFixed in version [**6.0.14**](https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14).\n\nThe latest releases can be found [here](https://github.com/spring-projects/spring-framework/tags).\n\n## Workaround\nThe vendor supplies the following workaround [here](https://spring.io/security/cve-2023-34053):\n\u003e As a temporary workaround, Spring Boot 3.0.x and 3.1.x users can choose to disable web framework observations with the following property: `management.metrics.enable.http.server.requests=false`\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-web:3.1.0\n        - org.springframework:spring-webmvc:6.0.9\n\n\n## References\nCommon Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-20"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2022-1471 snakeyaml 1.33: spring-boot-starter-validation 3.1.0: org.yaml","shortDescription":{"text":"Transitive Dependency: snakeyaml 1.33 from spring-boot-starter-validation 3.1.0 (CVE-2022-1471 BDSA-2022-3447)"},"fullDescription":{"text":"SnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-boot-starter-validation 3.1.0  | 3.1.1  | 3.1.1 |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| snakeyaml 1.33  | 1.33.0.SP1-redhat-00001  | 2.2 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=87c290a2-5a03-4cfd-8e93-fdb4805fb844)\n\n\n## Description\nSnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2022-3447](https://openhub.net/vulnerabilities/bdsa/BDSA-2022-3447)([CVE-2022-1471](https://nvd.nist.gov/vuln/detail/CVE-2022-1471)) - SnakeYAML Vulnerable to Remote Code Execution (RCE) via Deserialization of Untrusted YAML File with 'Constructor()' Class\n\n\n## Solution\nFixed in version [**2.0**](https://bitbucket.org/snakeyaml/snakeyaml/src/snakeyaml-2.0/) by [this](https://bitbucket.org/snakeyaml/snakeyaml/commits/2b8d47c8bcfd402e7a682b7b2674e8d0cb25e522) commit.\n\nThe latest stable releases are available [here](https://bitbucket.org/snakeyaml/snakeyaml/downloads/?tab=tags).\n\n## Workaround\nThe `SafeConstructor()` class may be used instead of `Constructor()` while parsing untrusted content.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - org.springframework.boot:spring-boot-starter-validation:3.1.0\n        - org.springframework.boot:spring-boot-starter:3.1.0\n            - org.yaml:snakeyaml:1.33\n\n\n## References\nCommon Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","text":"SnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-502"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34034 spring-security-test 6.1.0: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 6.1.0 (CVE-2023-34034 BDSA-2023-1825)"},"fullDescription":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=9745989b-d9d8-496c-b5e1-d02527c7d019)\n\n\n## Description\nSpring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1825](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1825)([CVE-2023-34034](https://nvd.nist.gov/vuln/detail/CVE-2023-34034)) - Spring Security Vulnerable to Security Mechanism Bypass in Spring WebFlux via Un-Prefixed Double Wildcard Pattern\n\n\n## Solution\nFixed in versions:\n- [**5.6.12**](https://github.com/spring-projects/spring-security/releases/tag/5.6.12) by [this](https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780) commit,\n- [**5.7.10**](https://github.com/spring-projects/spring-security/releases/tag/5.7.10) by [this](https://github.com/spring-projects/spring-security/commit/fe9bc26bdcfea2a40c93e3db98e649bfb0edaab2) commit,\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/a939f17890a9415604ecf81bc236d3e969e2d9b4) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/cbef118026e38005109158dd35e79038af2bb913) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/aaa31312bd74c637ce9549ed68cab33214008bf5) commit.\n\nThe above fixed versions require Spring Framework versions:\n- [**5.2.25**](https://github.com/spring-projects/spring-framework/releases/tag/5.2.25),\n- [**5.3.29**](https://github.com/spring-projects/spring-framework/releases/tag/5.3.29),\n- [**6.0.11**](https://github.com/spring-projects/spring-framework/releases/tag/6.0.11).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-287](https://cwe.mitre.org/data/definitions/287.html)\n\n","text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-287"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-34035 spring-security-test 6.1.0: org.springframework.security","shortDescription":{"text":"Direct Dependency: spring-security-test 6.1.0 (CVE-2023-34035 BDSA-2023-1821)"},"fullDescription":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| spring-security-test 6.1.0  | 6.2.0  | 6.2.0 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=9745989b-d9d8-496c-b5e1-d02527c7d019)\n\n\n## Description\nSpring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-1821](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-1821)([CVE-2023-34035](https://nvd.nist.gov/vuln/detail/CVE-2023-34035)) - Spring Security Vulnerable to Authorization Bypass due to Authorization Rule Misconfiguration via 'DispatcherServlet' and 'requestMatchers(String)'\n\n\n## Solution\nFixed in versions:\n- [**5.8.5**](https://github.com/spring-projects/spring-security/releases/tag/5.8.5) by [this](https://github.com/spring-projects/spring-security/commit/df239b6448ccf138b0c95b5575a88f33ac35cd9a) commit,\n- [**6.0.5**](https://github.com/spring-projects/spring-security/releases/tag/6.0.5) by [this](https://github.com/spring-projects/spring-security/commit/fe7bee9236146b29ed751d6cd9de48e87b6d2dfd) commit,\n- [**6.1.2**](https://github.com/spring-projects/spring-security/releases/tag/6.1.2) by [this](https://github.com/spring-projects/spring-security/commit/cf2c8da3d50647728ff1fb5c7c2e2e43cffe9232) commit.\n\nAfter upgrading to a fixed version, previously vulnerable endpoints may now generate error messages. Specific guidance to amend this has been provided by the vendor [here](https://spring.io/security/cve-2023-34035#Mitigation).\n\nThe latest stable releases can be found [here](https://github.com/spring-projects/spring-security/releases).\n\n\n\n\n\n## References\nCommon Weakness Enumeration: [CWE-285](https://cwe.mitre.org/data/definitions/285.html)\n\n","text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","direct_dependency","patch_available","external/cwe/cwe-285"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-44487 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-44487 BDSA-2023-2732)"},"fullDescription":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=af28de80-191b-4c55-ad47-b7c6292580ad)\n\n\n## Description\nThe HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [BDSA-2023-2732](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2732)([CVE-2023-44487](https://nvd.nist.gov/vuln/detail/CVE-2023-44487)) - HTTP/2 Protocol Vulnerable to Denial-of-Service (DoS) via Rapid Request Cancellations\n\n\n## Solution\nFixed in:\n* nghttp2 [**1.57.0**](https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0) by [this](https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832) commit,\n* NGINX **default** branch with [this](https://hg.nginx.org/nginx/rev/cdda286c0f1b) revision,\n* Apache Tomcat \n\t* [**8.5.94**](https://github.com/apache/tomcat/releases/tag/8.5.94) by [this](https://github.com/apache/tomcat/commit/944332bb15bd2f3bf76ec2caeb1ff0a58a3bc628) commit,\n\t* [**9.0.81**](https://github.com/apache/tomcat/releases/tag/9.0.81) by [this](https://github.com/apache/tomcat/commit/6d1a9fd6642387969e4410b9989c85856b74917a) commit,\n\t* [**10.1.14**](https://github.com/apache/tomcat/releases/tag/10.1.14) by [this](https://github.com/apache/tomcat/commit/76bb4bfbfeae827dce896f650655bbf6e251ed49) commit,\n\t* [**11.0.0-M12**](https://github.com/apache/tomcat/releases/tag/11.0.0-M12) by [this](https://github.com/apache/tomcat/commit/9cdfe25bad707f34b3e5da2994f3f1952a163c3e) commit,\n* Apache Traffic Server\n\t* [**9.2.3-rc0**](https://github.com/apache/trafficserver/releases/tag/9.2.3-rc0) by [this](https://github.com/apache/trafficserver/commit/b28ad74f117307e8de206f1de70c3fa716f90682) commit,\n\t* [**8.1.9-rc0**](https://github.com/apache/trafficserver/releases/tag/8.1.9-rc0) by [this](https://github.com/apache/trafficserver/commit/d742d74039aaa548dda0148ab4ba207906abc620) commit,\n* Netty/Codec/HTTP2 [**4.1.100.Final**](https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.100.Final) by [this](https://github.com/netty/netty/commit/58f75f665aa81a8cbcf6ffa74820042a285c5e61) commit,\n* Eclipse Jetty\n\t* [**12.0.2**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.2), [**11.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.17), [**10.0.17**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.17) by [this](https://github.com/jetty/jetty.project/commit/dbb94514dc9d3fb21fe92080f57c314e7e06a148) commit,\n\t* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/0f246d12090fb15b7b21dee8429f459fd792de53) commit.\n* lighttpd **master** branch by [this](https://github.com/lighttpd/lighttpd1.4/commit/7b48f3c843e1113b27f5d278f4d10861cc499a06) commit.\n* grpc-go \n  * [**1.56.3**](https://github.com/grpc/grpc-go/releases/tag/v1.56.3) by [this](https://github.com/grpc/grpc-go/commit/5efd7bd7) commit,\n  * [**1.57.1**](https://github.com/grpc/grpc-go/releases/tag/v1.57.1) by [this](https://github.com/grpc/grpc-go/commit/6a1400d5) commit,\n  * [**1.58.3**](https://github.com/grpc/grpc-go/releases/tag/v1.58.3) by [this](https://github.com/grpc/grpc-go/commit/c40c9ba3) commit.\n\n## Workaround\nDepending on technologies use and their configuration, different mitigation strategies may be available.\n\nIn some cases, it may be possible to limit the amount of `RST_STREAM` frame frames that are processed within a given time by configuring the particular HTTP/2 implementation manually. Please refer to your software vendor's advisories for more information.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-http:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)\n\n","text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"properties":{"security-severity":"8.9","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-400"]},"defaultConfiguration":{"level":"error"}},{"id":"CVE-2023-40167 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-40167 BDSA-2023-2470)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=af28de80-191b-4c55-ad47-b7c6292580ad)\n\n\n## Description\nEclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs).\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2470](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2470)([CVE-2023-40167](https://nvd.nist.gov/vuln/detail/CVE-2023-40167)) - Eclipse Jetty Vulnerable to HTTP Request Smuggling via '+' Character Prefix in Content-Length Value in HTTP/1 Header Field\n\n\n## Solution\nFixed in versions:\n* [**12.0.1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.1) by [this](https://github.com/eclipse/jetty.project/commit/13cf2dade746e5d3bb123fd7ecd9fdc28fc43082) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/003e46cae4d71e147d51fb8ea378e8989d381cc3) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/e4d596eafc887bcd813ae6e28295b5ce327def47) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-http:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-130](https://cwe.mitre.org/data/definitions/130.html)\n\n","text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-130"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36478 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36478 BDSA-2023-2721)"},"fullDescription":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=af28de80-191b-4c55-ad47-b7c6292580ad)\n\n\n## Description\nEclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2023-2721](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2721)([CVE-2023-36478](https://nvd.nist.gov/vuln/detail/CVE-2023-36478)) - Eclipse Jetty Vulnerable to Denial-of-Service (DoS) via Integer Overflow in 'checkSize' Method\n\n\n## Solution\nFixed in:\n* [**9.4.53.v20231009**](https://github.com/jetty/jetty.project/releases/tag/jetty-9.4.53.v20231009) by [this](https://github.com/jetty/jetty.project/commit/c7a4b05fc735e73e7522cb617c079045b709957b) commit and [this](https://github.com/jetty/jetty.project/commit/a4d61e9eb026ec98c79107e840cabdf520482c56) commit,\n* [**10.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-10.0.16), [**11.0.16**](https://github.com/jetty/jetty.project/releases/tag/jetty-11.0.16) and [**12.0.0.beta2x**](https://github.com/jetty/jetty.project/releases/tag/jetty-12.0.0.beta2x) by [this](https://github.com/jetty/jetty.project/commit/a8c9eea75bffcb2b2557acefb75856707654a56f) commit and [this](https://github.com/jetty/jetty.project/commit/420ec7cc1db65b42693dc002aca0faa567f62f7e) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-http:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-190](https://cwe.mitre.org/data/definitions/190.html)\n\n","text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"properties":{"security-severity":"6.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-190"]},"defaultConfiguration":{"level":"warning"}},{"id":"CVE-2023-36479 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","shortDescription":{"text":"Transitive Dependency: jetty-http 11.0.15 from wiremock 3.0.0-beta-2 (CVE-2023-36479 BDSA-2023-2464)"},"fullDescription":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"help":{"markdown":"\n## Upgrade Guidance\n\n\n### Upgrade Guidance for Direct dependency\n\n| **Affected Direct Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| wiremock 3.0.0-beta-2  | Not available  | Not available |\n\n### Upgrade Guidance for Transitive dependency\n\n| **Affected Transitive Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| jetty-http 11.0.15  | 11.0.18  | 12.0.4 |\n\n\n[Click Here To See More Details in Black Duck](https://us03-qa-hub11.nprd.sig.synopsys.com//api/projects/72639d1d-d523-488f-9e74-2d2859c6aaa4/versions/a502a527-90e2-44fe-91ff-336fea89f58b/vulnerability-bom?selectedComponent=af28de80-191b-4c55-ad47-b7c6292580ad)\n\n\n## Description\nEclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2023-2464](https://openhub.net/vulnerabilities/bdsa/BDSA-2023-2464)([CVE-2023-36479](https://nvd.nist.gov/vuln/detail/CVE-2023-36479)) - Eclipse Jetty Vulnerable to Improper Neutralization of Quoting Syntax via Errant Command in CGI Servlet\n\n\n## Solution\nFixed in versions:\n* [**12.0.0.beta1**](https://github.com/eclipse/jetty.project/releases/tag/jetty-12.0.0.beta1) by [this](https://github.com/eclipse/jetty.project/commit/6ce5a0fbcdf06ae647dfd304dd81a1f9b0691a5c) commit.\n* [**11.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16) and [**10.0.16**](https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16) by [this](https://github.com/eclipse/jetty.project/commit/c29491e5ac70c98e4d7d7dff2a6465ddecc45c0c) commit.\n* [**9.4.52.v20230823**](https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.52.v20230823) by [this](https://github.com/eclipse/jetty.project/commit/ec7e1fd173481e526db4092f558aa2b5aab57580) commit.\n\nThe latest stable releases can be found [here](https://eclipse.dev/jetty/download.php).\n\n## Workaround\nThe vendor has issued the following workaround:\n\n\u003e The` org.eclipse.jetty.servlets.CGI` Servlet should not be used. Fast CGI support is available instead.\n\n## Dependency tree\n- org.owasp.webgoat:BD-FULLSCAN-maven-webgoat:2023.5-SNAPSHOT:-maven\n    - com.github.tomakehurst:wiremock:3.0.0-beta-2\n        - org.eclipse.jetty:jetty-server:11.0.15\n            - org.eclipse.jetty:jetty-http:11.0.15\n\n\n## References\nCommon Weakness Enumeration: [CWE-149](https://cwe.mitre.org/data/definitions/149.html)\n\n","text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"properties":{"security-severity":"3.8","tags":["security","open_source_analysis","transitive_dependency","patch_available","external/cwe/cwe-149"]},"defaultConfiguration":{"level":"note"}}]}},"results":[{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot 3.1.0: spring-boot-properties-migrator 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"7ccb1066b0700bbb96d910e810e577cf85cce7ee97fa1442f7af0090f61f1488"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-3341 logback-classic 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","partialFingerprints":{"primaryLocationLineHash":"662363fb3fffc9d734b970274263dfe207c07dc38a259fa441dbe11100c57722"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-6378 logback-classic 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","partialFingerprints":{"primaryLocationLineHash":"22f1c9695a0088523b3e7b827b71c83cf9b6928c0779c13b442894d1f7292927"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 http2-hpack 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","partialFingerprints":{"primaryLocationLineHash":"c7b2e04b3870ea8e19c9c957ea5a1726fdbb95e124cb4660b5026d63aea815ac"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-test 6.0.9: spring-boot-starter-test 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"53a22800df0760a2f484161c75c3802434498482ac2ef5bed23abbf9535155d3"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"8aaf705a66776f4e7f3c7d3173955b3f075dcef593bdd5e72e2ea59625c6dc77"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"857901575e2605dbf48c596df868bb94615bd53e3a53a1837df5fa44d5814bf2"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"3d586b4930924ca0437adf774ddc9f2990de50ef9f68da95288259571f95da1d"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-xml 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"e76d98fb9da52e860891ebc48e641e7ec5f2e2a95f03af1a072e09080793fe8d"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-jdbc 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"80e09bc0cbcddeefc63f882fc9a5d17721bfebb17ae17989c449bf444faebe82"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"b56064d64b175bd34861391315011a6ada3860e97b14e85c3a39f9ac5256e406"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"fa40aa5c5e329d4f675c3be56a518ff5af385e48c86c462a8e83fd46b384a02f"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"3b559c896235546a58dc53c4f13a05cb49b27bc4f8f6e376246569812ec5dd59"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-servlet 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"02ec8bf1b7c9300ad89b2eb6b2e7a565cdc034b8f3ae832f9bcf2344f36fef5d"}},{"message":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34035 spring-security-web 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"fb7810c91fcec59ce2c53a3edd0873b398adef1c29d3a77572c270f45b1ca7c9"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34034 spring-security-web 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"657e6fe4ecae50b36ff972b1d519aff02b6f5ebfe490577a8b7469b7f60f98f7"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-json 3.1.0: spring-boot-starter-web 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"c7d023e2388134dcfa3fba443a012f4a55ba104f3ff9c02ff0ee792f784e6e0b"}},{"message":{"text":"A stored cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts in the victims browser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":114}}}],"ruleId":"CVE-2018-20677 bootstrap 3.3.7: org.webjars","partialFingerprints":{"primaryLocationLineHash":"e3e037c8ad22623a520cf466ac49f1b4423b5326490ce8f726cc2f76319a6c91"}},{"message":{"text":"A reflected cross-site scripting (XSS) vulnerability has been discovered in Bootstrap. An attacker could exploit this vulnerability by distributing  a crafted link that executes malicious scripts on the victims browser."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":114}}}],"ruleId":"CVE-2018-20676 bootstrap 3.3.7: org.webjars","partialFingerprints":{"primaryLocationLineHash":"a2eb582e90ccd210cce6e5acb57c8d5880b6f086de269000280aaf105f4b5894"}},{"message":{"text":"Bootstrap is vulnerable to cross-site scripting (XSS) due to the insufficient sanitization of user-provided input. An attacker could execute malicious scripts within a victim's browser by tricking them into clicking on a crafted link. This could allow the attacker to obtain sensitive information such as browser cookies."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":114}}}],"ruleId":"CVE-2016-10735 bootstrap 3.3.7: org.webjars","partialFingerprints":{"primaryLocationLineHash":"0c01b6b2bfb985b8a3d1ae3f4045b82c700383a5a63f2b6113c39df1daf249b0"}},{"message":{"text":"bootstrap is vulnerable to cross-site scripting (XSS) due to an absence of sanitation in the `data-template`, `data-content` and `data-title` properties for tooltips and popovers plugin content."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":114}}}],"ruleId":"CVE-2019-8331 bootstrap 3.3.7: org.webjars","partialFingerprints":{"primaryLocationLineHash":"35959fec7ba128c7f3a23f05dbb44decd4021456d15cea51cf9bb1ba7039f192"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"10edc40ad9dba5575d52d6bde92b45ef514d72a57c4f2af3f0f9e4c40fd8145b"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"b4b27ee9c86243178d060078f52310045626e4a42bd44567c4d5c48434f43733"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"ea016e26e0e4bffc6934fe29d2039e34bdec13b1409b6c5798c369407dc02674"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-client 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"06116288ed5c814e0dd3472bedfe1ac15d56d7891c3f48b374694b1b764d83f9"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-thymeleaf 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"ceda0a095979c8edec17f5fb59cd55017104895aab18208f335752f139eac4fa"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34034 spring-security-crypto 6.1.0: spring-security-test 6.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"c21e777c3ef28d39803683b0cb70b9b3a92c691d84a25cbf16be62dc85e58fd0"}},{"message":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34035 spring-security-crypto 6.1.0: spring-security-test 6.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"9781c7415830d55174cbcfa1656eb8770b82ad7cbae7387bf0602d7fd6b7241e"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\nNote that if the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39154 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"20bda8762cb244b1237f7942a25170377373de5766b75c2a2eb7c00016a6ce34"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39145 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"1f23230990ee5a3d7ec752cd502c535e07ff747100d5b00dfd600765caeb962a"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary system commands.\n\nNote that if the application uses XStream's security framework and allowlist approach to deserialization (recommended), it is not vulnerable.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39144 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"7388278bf4e5c5e8be5c31ec9f78eae45569963f7330a5174d0095fd1666a37f"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39141 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"bba530cab1259b2dc20715626318ca0f39293fbf87a8290aab214c3159d2cc8e"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39148 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"cd90e00f64f254680ba7096436865deeb0144aa07345a30167ae432ef162bc34"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) through specially crafted input. A remote attacker is able to execute arbitrary system commands on the host machine if Xstream's security framework has been configured with a default blacklist, rather than the more secure whitelisting method."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2020-26217 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"e5bf3183eda043e885a1cc4dda9478caf35f1c53366090114bcd68f194a5d6c4"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2013-7285 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"5cb0f805384f3609d79221ccd8dd39733df5b6b4eda643c2f5f60b42569101e8"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39146 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"16a96f4ed378092b5164ee784c1a719f3b6a2d51ff7b4fa9c8a83bf8be2976dd"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39147 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"9aaa240abd302ad53211b45aac13218721b43d978bf3fa3d9f73211bd75d2066"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of user-controlled input. A remote attacker could leverage this to execute arbitrary code from a remote server.\n\n**Note:** If the application uses XStream's security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39139 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"d513a954801dafc37082836c7f89021e9f1d595294ac69e0d45260851f8e0fc2"}},{"message":{"text":"XStream is vulnerable to server-side request forgery (SSRF) by a remote attacker who can supply a specially crafted input stream to modify or inject objects. This allows them to request data from the internal network that the XStream application is hosted on."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21349 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"780f505d15f86f40223fc9ebb36d790d85be7e3d31bbdfd1e3c0afe47f477b9c"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21351 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"dd85fa9e007cc926d0054602dbdb88e1d3dd15e9c4a03da58ccb0bd46a734f9d"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case are `javafx.collections.ObservableList` and `JavacProcessingEnvironment$NameProcessIterator`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21347 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"29d2c4d612a874ec6a8485fc0f47068b09a6aecac1d14de8e95f979b280eef69"}},{"message":{"text":"XStream, when using some supported parsers, is vulnerable to an XML entity expansion issue due to how these parsers can process external entities by default.\n\nA remote attacker could use this issue to retrieve the content of arbitrary files with known locations in a local file system if the Java process has read access.\n\n**Note**: XStream is not vulnerable if the default XML Pull Parser (`Xpp3` or `kXML2`) is used. These parser types do not process XML entities."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2016-3674 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"25635e461288836f539ee32b952b5873243410df106cf61b3f6dae024a6bbf33"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of CORBA and XSLTC classes. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39149 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"a22703e49916bfe44c080e0f5eb2b6d82411930bf5f04677a62a49b3b9c87b3b"}},{"message":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39150 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"de017e40ea59c93fdd66ddf614a6155648cd8175bc5fc2f6d8ff3ce0de627af2"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.jndi.toolkit.dir.LazySearchEnumerationImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-29505 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"b161b6dd6ffe5c0b4a2f7ebe1377eda96723b9ccdc9fe02325ae0bc219b18642"}},{"message":{"text":"XStream is vulnerable to an arbitrary file deletion flaw in it's handling of unmarshalling specially crafted input. A remote attacker could delete arbitrary files on the server, if the server process has sufficient rights. As well as impacting the integrity of data, this might lead to a denial-of-service (DoS) of applications on the system that rely on specific files for their operation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2020-26259 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"ffcec23603f277d179a75d2ea698199932c4d781f28ae333619d68ff55d567c0"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `sun.swing.SwingLazyValue`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21346 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"b4f0956db96c9ea51d90ab822439c97c6cfcdd9dbad7d04ef714230b5ece37ff"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary command execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `com.sun.corba.se.impl.activation.ServerTableEntry`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary commands on the XStream host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21345 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"508f132bac63f752c15e403b5e4adf602b6e80b19fbc7c5c519539f3b52902ba"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe deserialization of classes from the `com.sun.java.util.jar.pack` package. A remote attacker could execute arbitrary code on a vulnerable server by causing it to process a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39153 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"7c75be4f87257f69407acb8cd858c3bd3e7c2ff04121d7f6b6a5270816a58ce1"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary code execution issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are the JAXB `Accessor$GetterSetterReflection` internal type and `com.sun.rowset.JdbcRowSetImpl`.\n\nAn attacker could supply a crafted input to XStream in order execute arbitrary code stored on a remote host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21344 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"6c5b79b15828dc377c749507e04e6192bd00e17f532a2b3222ed2b0a1dfb302e"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a server-side request forgery (SSRF) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `javax.activation.URLDataSource`.\n\nAn attacker could supply a crafted input to XStream in order request information from internal resources."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21342 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"73c25c7503067146666eafffd0812708f5b22fcc1f50fd7912aad46df3f1ba14"}},{"message":{"text":"Xstream is vulnerable to an information disclosure flaw where it can be tricked into including remote resources when unmarshalling specially crafted input. A remote attacker could learn details about the internal network."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2020-26258 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"8cb24c10b7d90865a87304e18e37daf232e195cb9f270fc43109c9ce48b75b45"}},{"message":{"text":"XStream is vulnerable to server-side request forgery (SSRF) due to the improper restriction of deserialization functionality. A remote attacker could send requests to intranet hosts by sending maliciously crafted serialized data to a vulnerable server.\n\n **Note** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39152 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"def3c47bb11f48f2c39feb4477f5da680267753ef256d426821c78d3d148dac2"}},{"message":{"text":"Xstream is vulnerable to remote code execution (RCE) by an attacker who can supply a specially crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21350 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"a49e77ee4cef106293c5593fc635a2fa81623183a981389d6e13d7bba53f0bc3"}},{"message":{"text":"XStream is vulnerable to remote code execution (RCE) due to the unsafe demarshalling of the `KeyStoreResolver$KeyStoreIterator` subclass. A remote attacker could execute arbitrary code on a vulnerable server by causing that server to deserialize a maliciously crafted serialized object."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39151 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"887f933d850208930001dfdbdba17a4c29a11090051ebe2e24eaf738437aac69"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to an arbitrary file deletion issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous types in this case are  `sun.awt.datatransfer.DataTransferer$IndexOrderComparator` and `java.io.FileInputStream`.\n\nAn attacker could supply a crafted input to XStream in order deletion arbitrary files on the local host."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21343 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"efc121c6f6f31d3a81ea5092d5353826c329a9c2c65c2fc21ef63d67b4f48df9"}},{"message":{"text":"XStream is vulnerable to denial-of-service due to a stack overflow that exists due to a recursive hash set calculation. A remote attacker could cause a vulnerable application to crash by causing that application to process a maliciously crafted input stream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2022-41966 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"2daab8b7a1ed67e6104be6c6717658ee7c55bb7d28c41db8a523a19001cbb59e"}},{"message":{"text":"A flaw exists within (de)seralization functionality within XStream. Sending a carefully crafted object data will crash the Java process and cause a DoS *(Denial of Service)*. In order to exploit this vulnerability, users require the ability to manipulate the incoming stream of data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2017-7957 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"823accdb8a2574acb6368aabd8a351ef030df4028ec78e2aae80df7c214e14ca"}},{"message":{"text":"XStream, when in its default configuration or operating without a sufficient blacklist / whitelist configuration, is vulnerable to a denial-of-service (DoS) issue. This is due to how XStream can potentially create new instances of dangerous objects that are not blocked based on the contents of the input stream. The potentially dangerous type in this case is `java.io.ByteArrayInputStream`.\n\nAn attacker could supply a crafted input to XStream in order to cause an endless loop, negatively impacting the availability of XStream."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21341 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"2628530399fe5092c055e7b8d9797ac2e41ffbfa78743c195d47f342f36f57de"}},{"message":{"text":"XStream contains a stack overflow vulnerability. An attacker could exploit this by providing crafted content in order to cause a denial-of-service (DoS) condition via a crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2022-40151 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"2e70f0af033852646e54e13db22ed4a3cf2617b1567b92413765381720adfea4"}},{"message":{"text":"XStream is vulnerable to denial-of-service (DoS). An attacker could exploit this by manipulating the processed input stream by injecting a highly recursive collection or map."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-43859 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"7ab8850d21304d68a21771c90e1ddfb5a6930c75e2ca1cdc040b2333338ce8d5"}},{"message":{"text":"XStream is vulnerable to unsafe deserialization of attacker controlled input. A remote attacker could leverage this to consume all available CPU cycles via an infinite loop condition.\n\n**Note:** If the application uses XStreams security framework and whitelist approach to deserialization (recommended), it is not vulnerable."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-39140 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"f34f438f312c5c532a5de88ef4aa3186c247f2d28257e579b0211367d6a04cb5"}},{"message":{"text":"Xstream is vulnerable to regular expression denial-of-service (ReDoS) by a remote attacker who can supply a specially crafted input stream. This allows the attacker to occupy a thread that consumes maximum CPU time, making it unavailable for service."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":149}}}],"ruleId":"CVE-2021-21348 xstream 1.4.5: com.thoughtworks.xstream","partialFingerprints":{"primaryLocationLineHash":"3612b2b333e0b190086b08da33a777c4d56d24af26f21a617ab93de4c8d6f06a"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-data-jpa 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"9e271f1ea8fe192a1baf1e8c1a457c51276c26433448b5d4d8fc072dc708804a"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-orm 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"35fd6b29ea9bfa6fc0fb8e378a2ecc571d1df8054d4070dd7990885503810e05"}},{"message":{"text":"Undertow contains a denial-of-service (DoS) vulnerability. An unauthenticated attacker could exploit this by manipulating Servlet annotations to exhaust system resources and cause a system crash."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-2318 undertow-core 2.3.6.Final: spring-boot-starter-undertow 3.1.0: io.undertow","partialFingerprints":{"primaryLocationLineHash":"4961c9db9be8b394aa3b80e971c0d3f07097f1f05dc5a5d923f21e33f1831fc3"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"e744d83007b9eca3ccdfe4b7edd5484a81e3595392f2f53da942d6982c846bc2"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"a9bffa92b9b675769334483a58087cfea5a0a8ff9453dc7c27e7c7938213b0a7"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"8a5da36e11fd176758137cec199d5b60771b0368baa5dda5275321a274096a4d"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"8e684c863bbc1ee122e4b1e50fabe4922b570765167c3da0fe42a32baa6404f5"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"1ce992e6f221b2a6209db1f9e4734c9495e1a2811c2073f40cde36b51f2b01bf"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"990fedde7fa8fdc3ca03d673a7a9d5b6f66da2f89a710160cdde111c7e8d8b4d"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"2ec318d10b065dfa643ce400f496b2a516a3e9610c1375c6538b3c148d6a43f1"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-webapp 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"02ff7c95ba6cd9a562f7dcaa39ba621922b3febe64b74bb949d6e943a99a16e1"}},{"message":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34035 spring-security-config 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"bb29e9cb4ec2a546a06c2ebb40ff3534cee4934d3634998394846e801f9a1696"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34034 spring-security-config 6.1.0: spring-boot-starter-security 3.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"67e36332b4ce60401fa09f97dfc25ae756d96f92d362c0c5d801d0582da09b08"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-tx 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"f8902ad9e17fc9bf0abce58ec7b881798caa80e5a05b68e8ddf327ea7ee8e2b1"}},{"message":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34035 spring-security-core 6.1.0: spring-security-test 6.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"7c516286d7cc4b5e10767ef57addfe87b661f0c3ac0acea320469b1fa76591f6"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34034 spring-security-core 6.1.0: spring-security-test 6.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"e64233db069943e01fc277d2c655fdddc1fd3e1868a96dfd9d75aa52cc80281e"}},{"message":{"text":"Apache Tomcat is vulnerable to HTTP request smuggling when used behind a reverse proxy. This allows a remote attacker to append additional HTTP request onto valid HTTP requests and can be used to bypass validation, access restricted data, or perform actions on behalf of another user or group."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-46589 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"7358ec46574ed70d4308e1df5a756a340a6e7a13a909f1eb896e2526caf563dc"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-44487 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"1b713bc87fd31eb9832d8293704ba8d44be54f9cbae83b6929a3787276f2a2fc"}},{"message":{"text":"Apache Tomcat is vulnerable to open redirects because of insufficient input validation. This vulnerability affects ROOT (default) web applications that have been configured to use `FORM` authentication feature. It can allow an attacker to trick a victim into accessing a specially crafted URL that redirects to an attacker-controlled location.\n\n**Note:** The scope of this vulnerability is limited to the ROOT (default) web application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-41080 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"3f1f2ff8d4949997ef24e33d4c462d41d1ffeed1323ac4e44ee7e04cff8784a5"}},{"message":{"text":"Apache Tomcat is vulnerable to information exposure due to a regression causing improper handling of responses which did not include any HTTP headers. This could allow an attacker through AJP-based proxies to leak response headers from one request into another request."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34981 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"9f08c6a7ffd997e10f99d674acef638407223cc6a7eb2054846392a5c959762b"}},{"message":{"text":"Apache Tomcat is vulnerable to HTTP request smuggling due to improper parsing of HTTP trailer within the header. An attacker could exploit this vulnerability by supplying a specially crafted HTTP request containing invalid trailer field names or values from a reversed proxy, in order to bypass security access controls such as a web application firewall (WAF) or an intrusion detection system (IDS)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-45648 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"eab803c18954015db759d8bd67e4b7b942d2681412aa6640d24d9d0c901b9784"}},{"message":{"text":"Apache Tomcat contains an information exposure vulnerability due to insufficient error handling within the internal object recycling method. An attacker could exploit this issue to gain unauthorized access to sensitive information contained within the request/response when an error in recycling."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-42795 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"dec2b708e448cccca52908c54a0c01ef110ea4ca9f6617c084400d8ed18e8589"}},{"message":{"text":"Apache Tomcat contains a denial-of-service (DoS) vulnerability due to improper session management. An attacker could exploit this vulnerability by uploading an arbitrary file, which will initialize a stream connection through the session processing which may fail to close the stream connection, resulting in the temporary file to remain stored within the disk. This could potentially lead to disk storage becoming full as the temporary files are not being removed, resulting in a denial-of-service (DoS) condition when disk memory resources have been exhausted."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-2728 tomcat-embed-el 10.1.8: spring-boot-starter-validation 3.1.0: org.apache.tomcat.embed","partialFingerprints":{"primaryLocationLineHash":"8c167f863262ba9b7842ba637b1a77f30da9acb6489c7eb669aeb02be90b7a23"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"BDSA-2023-3341 logback-core 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","partialFingerprints":{"primaryLocationLineHash":"6fe2671cf715ec1ff2edb825cbbd21908a3dc8e58f3674114f8e850635c42e3a"}},{"message":{"text":"Logback contains a denial-of-service (DoS) vulnerability. An attacker could exploit this issue by connecting to a receiver and sending maliciously crafted data, which could in turn allow them to slow the logging of events or crash the application.\n\nSuccessful exploitation of this vulnerability requires that logback-receiver component is enabled and also reachable by the attacker."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-6378 logback-core 1.4.7: spring-boot-starter-validation 3.1.0: ch.qos.logback","partialFingerprints":{"primaryLocationLineHash":"c335421bc507236d25b1339c9d01c03cd08005c3793637373495dfeb200335e0"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-beans 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"58bb4c626eac837b04456889d2de687f08c1651ae8548757a21525ca730fa23f"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-jdbc 3.1.0: spring-boot-starter-data-jpa 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"6627ca399a3447ff301d6da28a6ecbcd077f385cf66a1349fd59f70a6314f4a4"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"c911d894ad16dd8e99117fcf8e29ba5e2d4fbd7cae6d197277b477a555e992c9"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"e77d37375d91af6ded187dba680ff0b3addec8005b4a9bb279e6102ea3dcab2f"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"9d67793ac45674fa0d2638a00dceb8129961feb71af6c575c78119a9ebb451fc"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-util 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"703b76e93a98427b1345f6e7a05a1af5262bb026aafbdc058a51c738044e2e54"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-expression 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"56ab7aa70114d0ddcb48def3266e8197267abee48e5d4c0560d5114f3e67e8e0"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-aop 6.0.9: spring-boot-starter-security 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"51d2c0b67ff23dc4093e5290f058549778a6ae6218eaa287aaa845dd2bc8a0e7"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-validation 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"af2bcc378af21159f36cc695a78053900b1c4f3f8b76969af76fd3995f2bb26b"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter 3.1.0: spring-boot-starter-validation 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"6ad8195eadff9a5ef13a1993d0e5405fef33af5d059bf632f9424d4ebdcb3ab1"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","partialFingerprints":{"primaryLocationLineHash":"90c4de18f4cf8ba8e63711f5422ac5ea47d4d8805ad137e623af8892b0a37fc3"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","partialFingerprints":{"primaryLocationLineHash":"8873fec02875db96479d37b65c7a6586eafb5d6a374294940fcfa07214fbe150"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","partialFingerprints":{"primaryLocationLineHash":"aba7306ad5e1b8f18db736d7975e89120cd3e1f7ba9a377b9067acbd9ef60be8"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 http2-server 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty.http2","partialFingerprints":{"primaryLocationLineHash":"606fdb8a35b09260eac8640627368ab4682927ca00d91571c5f0585679d85972"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-core 6.0.9: spring-boot-starter-test 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"4a0f29ab373957a23b317e0cdbf243489a4b058ea11c3db5e96516cd7263e2b7"}},{"message":{"text":"WireMock is vulnerable to a server-side request forgery (SSRF) due to improper restrictive configuration of the DNS resolver within the processing of webhooks. Successful exploitation of this issue could allow an unauthenticated attacker to trick a user into initiating a POST request via an arbitrary webhook to an outbound network, in order to obtain access to internal resources."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-41327 wiremock 3.0.0-beta-2: com.github.tomakehurst","partialFingerprints":{"primaryLocationLineHash":"fc0e0dcc3faeef2f73603085728937d6d3d0f4cb5e5bf29412e8bfed02bafb2c"}},{"message":{"text":"WireMock contains a domain restriction bypass vulnerability due to insufficient validation of allowed address rules. Successful exploitation of this issue enables a highly privileged attacker that has control over a DNS service to bypass domain restriction and gain unauthorized access."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-41329 wiremock 3.0.0-beta-2: com.github.tomakehurst","partialFingerprints":{"primaryLocationLineHash":"0b3fde1cac1d070ed711a224975c34b59dd5d9c847b1736eaa6fe97cc3136a94"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-web 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"0d203b4bf359070016c7e89e786b5e84a7db4c893d972fe914948ae651d59f7b"}},{"message":{"text":"Apache Commons FileUpload does not sufficiently limit the the number of request parts that can be received via user input. An attacker can exploit this flaw by supplying a malicious upload or series of uploads and cause excessive resource allocation. This can trigger a denial-of-service (DoS).\n\n**Note:** This vulnerability was not properly fixed in Apache Tomcat and required an additional disclosure as **CVE-2023-28709** (**BDSA-2023-1242**). The fix for Apache Commons FileUpload was not affected."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-24998 commons-fileupload 1.4: wiremock 3.0.0-beta-2: commons-fileupload","partialFingerprints":{"primaryLocationLineHash":"91e1528cb17bc6cf7fee86a2980d727235e9719d1b07c88f5ac1eda6c1d040a6"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-security 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"5d5cd1e1312761631f49542125f13846b3ec0ce0b0e34b7a5f97728873a16ced"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-logging 3.1.0: spring-boot-starter-validation 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"7b4d85fc1813df29acbf600cf06235a440872050e48cc3348b3775e99dd12c23"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-actuator 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"5b673f787736faea0cae8d9a1270fe5e501abf0f1e281087e391f6b3915556bf"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-autoconfigure 3.1.0: spring-boot-starter-validation 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"dceff4d93e61b09738e1aa4ab7b643269f12d108090afd3fe6c93e16a228bf0a"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-web 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"f2ccc3d2d95881416b6694c93d8716e9ade0f93b621476cb00f733989c5a420a"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-test 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"2e71dca4bcc7481f92b9c511cacaf900850df1697eb5cb11d0dc7ec5875a7fb9"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-context 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"b52360b89a1c61b842486f00933cd664085e8bf00fca695855d7f97c316b97f3"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"cee67e45cc3d65a1edddc56f7461ac74d3a5e00fe265a0d56a183ecf8cb64e1c"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"ac452009141bcee60ed47cf941dffb30ca9b0e7540f99fe9dd4a87dbcea2fcd8"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"5223bd0ef596106d3613322dee8b1040b9f0fe5d038043e50b7e640a244d6c81"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-io 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"b794b3558f311a3f5e74165706a73d0e4b6e0819e83e72c3f63b120ebd0dd817"}},{"message":{"text":"Thymeleaf is vulnerable to sandbox escape due to insufficient restrictions on the finding and invoking of methods via the Java reflection API. The impacts of this vulnerability depends on how an application uses Thymeleaf to render HTML. The reporter of this issue demonstrated how this could be leveraged to achieve server-side template injection (SSTI) leading to remote code execution (RCE) in Spring Boot Admin Server with MailNotifier enabled."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-38286 thymeleaf 3.1.1.RELEASE: spring-boot-starter-thymeleaf 3.1.0: org.thymeleaf","partialFingerprints":{"primaryLocationLineHash":"32ff0349d8f712662db51a01faf85fb30041a49cdb489517eacff3a539d0beb5"}},{"message":{"text":"Spring Boot is vulnerable to denial-of-service (DoS). An unauthenticated user could trigger the vulnerability by providing specially crafted HTTP requests to a web metrics endpoint."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34055 spring-boot-starter-aop 3.1.0: spring-boot-starter-data-jpa 3.1.0: org.springframework.boot","partialFingerprints":{"primaryLocationLineHash":"3560598113cdaa0072a2f64541d96d4655345b4822b52b07a1b41b22953e7863"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"0aecc91ed8b8449a506b9ce4427472982ae3dd04b02fab66af0277d92075fa3e"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"a5510639b180959047c9b185f4519d2a1728f8273d623031b82a3fe5e68f36b2"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"8316dccd26a6fad9288ab17a87f05da3b64942c0c3840e7b83886cf1812fc454"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-proxy 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"03923958fa99591d7ce5c66ca0478ca8e617ba468306e3d0b5fe70733f40a5b2"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"e4464ff7ac059636254537940cc0a562ffaa8fe654b9212a30352167ee95ba05"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"c0682d034b76167b8845c62c4ce2638834114720dfda8506d5b06a139c2cef17"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"444cb62949076997b3039e06839764c6a9d45e2eea0885ea544e0fc4c8821804"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-security 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"3337a25a10074371f06663b1a59968d370f6cf4cdccc9bff5f4df5817091df5a"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"c994e51055b359b6177a09d7d50b33994de537a847c4d1038830279070b62d19"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"587685adb77039bf75c9dc2c4c2270649e98cd0ef3b81e5d540ea6f8d1f8ade3"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"a5fc0eb35f564d3ddcce5282e2ca35e41465ac4abcc81a0b5f1659777a613cfa"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-servlets 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"0409c4a8e89ef7669268ab7516b6fdcf36a37284009d7efbd980a612835f20f6"}},{"message":{"text":"A stack overflow has been discovered in Jackson-Databind. A local attacker could potentially exploit this issue if they have means to control an in memory cyclic object, which could allow them to exhaust stack memory resources, leading to a denial-of-service (DoS) via a crash.\n\n**Note:** The maintainers of this product contest the validity of this issue. There is no feasible method for a remote attacker to construct and serialize the required object that is shown in the reporter's reproduction of this issue. There is an [ongoing effort](https://github.com/FasterXML/jackson-databind/issues/3972#issuecomment-1597236026) to have the corresponding CVE record for this issue rejected. A [commit](https://github.com/apache/kafka/commit/dcd8c7d05f2f22f2d815405e7ab3ad7439669239) has been applied that will suppress dependency check warning for this CVE."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":126}}}],"ruleId":"CVE-2023-35116 jackson-databind 2.15.0: jjwt 0.9.1: com.fasterxml.jackson.core","partialFingerprints":{"primaryLocationLineHash":"b4792fbb625316346b1699c2bc30623cae9512e97afc317c63d1a2598f568149"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-aspects 6.0.9: spring-boot-starter-data-jpa 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"67b354e0d33d8032ea39d8b123388905addc3ed5d8f426caa534662d30c582f0"}},{"message":{"text":"Spring Framework's `ObservationRegistry` implementation is vulnerable to an unspecified flaw that can result in a denial-of-service (DoS) occurring.\n\nAn end application is only vulnerable if all the following conditions are met:\n* Spring MVC or Spring WebFlux is being used,\n* `io.micrometer:micrometer-core` is on the classpath,\n* An `ObservationRegistry` is configured to record observations"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34053 spring-webmvc 6.0.9: spring-boot-starter-web 3.1.0: org.springframework","partialFingerprints":{"primaryLocationLineHash":"56c8ddd27659a61c8499b895bc39265e655a09053a0b2cc4d9df152563f6947b"}},{"message":{"text":"SnakeYAML is vulnerable to remote code execution (RCE) when used in an application to parse untrusted user-supplied YAML files. A remote attacker could craft a malicious YAML file that when deserialized allows arbitrary command execution on the target system."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2022-1471 snakeyaml 1.33: spring-boot-starter-validation 3.1.0: org.yaml","partialFingerprints":{"primaryLocationLineHash":"0be3febfc2e32cd624ae540763e2a7ec7f424fcc2d195b2444b8cf2374e3d9d5"}},{"message":{"text":"Spring Security used with Spring WebFlux performs incorrect parsing when using `**` as a pattern in Spring Security configuration due to inconsistent pattern matching between the two components. This could lead to bypassing of security mechanisms configured by Spring Security."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34034 spring-security-test 6.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"575355fa3961e882fb93418178a9b535f229c2f64ae7af6a2eecf9ff384d040a"}},{"message":{"text":"Spring Security could have authorization rules misconfigured when an application uses `requestMatchers(String)` and multiple servlets, one of which being `DispatcherServlet` from Spring MVC. This misconfiguration could lead to authorization bypass.\n\n**Note:** As per advice from the vendor, an application using Spring Security is only vulnerable if all the following conditions:\n- Spring MVC is on the classpath,\n- Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s `DispatcherServlet`),\n- The application uses `requestMatchers(String)` to refer to endpoints that are not Spring MVC endpoints."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"unknown file"},"region":{"startLine":1}}}],"ruleId":"CVE-2023-34035 spring-security-test 6.1.0: org.springframework.security","partialFingerprints":{"primaryLocationLineHash":"4861ca8faf8d1b6b2bd4b513751b3c3326c9091473ef6926b1775687b40ee438"}},{"message":{"text":"The HTTP/2 protocol contains a flaw related to the stream multiplexing feature that can allow for excessive resource consumption on servers operating implementations of the HTTP/2 protocol. \n\nThe HTTP/2 protocol allows clients to signal to a server to cancel a previously opened stream by sending an `RST_STREAM` frame. Attackers can abuse this stream canceling ability by opening a large number of streams at once immediately followed by `RST_STREAM` frames. In most HTTP/2 implementations this bypasses concurrent open stream limits and causes servers to spend processing time first handling request frames and then performing stream tear downs. For the server, these operations can pile up whereas the attacker client paid minuscule bandwidth and processing costs.\n\n[Amazon](https://aws.amazon.com/security/security-bulletins/AWS-2023-011/), [Cloudflare](https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/) and [Google](https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/) have reported that this vulnerability has been exploited in the wild from August to October 2023.\n\nThis vulnerability is listed as exploitable by the Cybersecurity \u0026 Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-44487 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"6e5e6f922b2d9641d1d4cb6511e9f868bb8c1885cd2820d54e9e3fec6d33d379"}},{"message":{"text":"Eclipse Jetty is vulnerable to HTTP request smuggling due to the improper parsing of HTTP requests. An attacker could exploit this vulnerability by sending maliciously crafted HTTP requests to a vulnerable endpoint with multiple requests included inside the body by manipulating the `Content-Length` of the request. The smuggling of HTTP requests may allow for the bypass of security tools such as web application firewalls (WAFs) and intrusion detection systems (IDSs)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-40167 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"bb1e9410b0e161d60a501840feb167f15cbbe98170f2305a5be6525dbc1ddd66"}},{"message":{"text":"Eclipse Jetty is vulnerable to a denial-of-service (DoS) issue due to presence of a user input validation flaw in the HTTP/2 HPACK functionality that can lead to an integer overflow and allow HPACK headers to exceed their expected size limits.\n\nAn attacker could submit crafted HTTP messages that trigger the integer overflow flaw and cause large buffers to be allocated on the server, consuming memory resources in a manner that could cause the server to run out of memory."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36478 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"6671e1fb108368aa754f44ec99a2e144ab0626fe65d03e0270bc5525c2cba826"}},{"message":{"text":"Eclipse Jetty contains an improper neutralization of quoting syntax issue within the CGI servlet. This could allow an authenticated attacker to send a request to the CGI Servlet for a binary with a space in its name in order to manipulate the command structure and execute incorrect commands."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"pom.xml"},"region":{"startLine":430}}}],"ruleId":"CVE-2023-36479 jetty-http 11.0.15: wiremock 3.0.0-beta-2: org.eclipse.jetty","partialFingerprints":{"primaryLocationLineHash":"ae59ef98d567b3cbc5fe9ecd023f84b5b0404264254ae6970a6fec169c1f6820"}}]}],"version":"2.1.0"}